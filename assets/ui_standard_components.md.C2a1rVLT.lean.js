/**
 * name: agile-team-doc
 * version: v2.1.0
 * description: 敏捷团队构建的线上文档，希望同时帮助到团队伙伴和社区的大家
 * author: CHENY <ycyplus@gmail.com>
 * homepage: undefined
 */
import{_ as s,C as t,c,o as i,aQ as n,G as l,j as o,a as d,w as p}from"./chunks/framework.BjhQmtN6.js";const v=JSON.parse('{"title":"组件库规范","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"ui/standard/components.md","filePath":"ui/standard/components.md","lastUpdated":1721982122000}'),u={name:"ui/standard/components.md"},b={class:"info custom-block"},m={class:"tip custom-block"};function h(k,e,g,f,x,P){const a=t("ElImg"),r=t("ElCard");return i(),c("div",null,[e[3]||(e[3]=n('<h1 id="组件库规范" tabindex="-1">组件库规范 <a class="header-anchor" href="#组件库规范" aria-label="Permalink to &quot;组件库规范&quot;">​</a></h1><h2 id="组件库是什么" tabindex="-1">组件库是什么？ <a class="header-anchor" href="#组件库是什么" aria-label="Permalink to &quot;组件库是什么？&quot;">​</a></h2><blockquote><p>组件库相当于乐高的一个个积木，通过组件的拼搭可以迅速搭建出一个页面。通常我们将组件库分为<code>基础组件</code>和<code>业务组件</code>两大类，前者是系统通用组件（<code>图标</code>/<code>按钮</code>/<code>输入框</code>等），后者是由业务决定的相对更复杂的<code>组件模块</code>。</p></blockquote><p>而对于 <code>B</code> 端产品和 <code>C</code> 端产品，二者的组件库又有些许差异。</p><div class="warning custom-block"><p class="custom-block-title">🔔 C 和 B 的区别</p><p><code>C</code> 端的组件库更追求极致的交互和视觉体验，因此需要考虑<code>视觉</code>、<code>性能</code>、<code>实现</code>、<code>兼容性</code>，另一方面，C 端会根据活动、节日切换不同的主题，也要考虑组件视觉上的<code>个性化扩展</code>。</p><p>对于 <code>B</code> 端而言，组件库更看重<code>可复用性</code>和<code>稳定性</code>，保证可以支持业务快速迭代。另外 <code>B</code> 端会涉及到各种各样的<code>数据录入</code>与<code>展示</code>，因此相对更高的要求是<code>大而全</code>，<code>覆盖面广</code>。</p></div><h2 id="如何做组件库" tabindex="-1">如何做组件库 <a class="header-anchor" href="#如何做组件库" aria-label="Permalink to &quot;如何做组件库&quot;">​</a></h2>',6)),l(a,{src:"ui/29.png"}),e[4]||(e[4]=o("h3",{id:"确定组件库的内容",tabindex:"-1"},[d("确定组件库的内容 "),o("a",{class:"header-anchor",href:"#确定组件库的内容","aria-label":'Permalink to "确定组件库的内容"'},"​")],-1)),e[5]||(e[5]=o("h4",{id:"",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#","aria-label":'Permalink to ""'},"​")],-1)),l(r,null,{default:p(()=>e[0]||(e[0]=[o("p",null,[o("strong",null,"新产品"),d("：对于新产品来说，业务体量较小，较难抽取共性，组件也不全面，因此较好的方式是"),o("code",null,"参考大厂"),d("的"),o("code",null,"组件库"),d("确定要做哪些组件，它们的相对成熟，参考价值较高。")],-1),o("p",null,[o("strong",null,"成熟产品"),d("：对于已经成熟的产品来说，我们可以直接"),o("code",null,"遍历页面"),d("，"),o("code",null,"穷举"),d("出所有用到的组件，除"),o("code",null,"基础组件"),d("外，提炼出"),o("code",null,"复用率高"),d("的"),o("code",null,"业务组件"),d("进行"),o("code",null,"结构化"),d("和"),o("code",null,"组件制定"),d("。")],-1)])),_:1,__:[0]}),e[6]||(e[6]=o("h3",{id:"组件分类",tabindex:"-1"},[d("组件分类 "),o("a",{class:"header-anchor",href:"#组件分类","aria-label":'Permalink to "组件分类"'},"​")],-1)),e[7]||(e[7]=o("p",null,"组件是设计师在日常设计工作中，极为常见的内容。设计师除了在完成业务需求的的设计之后，同时需要设计一套适用于产品的组件库。",-1)),l(a,{src:"ui/80.png"}),e[8]||(e[8]=n("<p>所谓「<strong>最佳方案性价比</strong>」，就是我们需要在设计的<code>个性化表达</code>和<code>资源投入</code>之间找到<code>最佳的平衡点</code>，在关注<code>出色视觉表现</code>的基础上，逐渐加强对<code>项目协同</code>及<code>体验价值</code>的关注，逐步形成新的<code>设计思维模式</code>，也就是<code>组件化思维</code>。</p><p><strong>组件化设计</strong> 就是把<code>产品需求场景化</code>、<code>视觉表达模块化</code>，每个<code>组件基于复用</code>为目的，使其<code>具备独立的完整解决方案</code>，通过标准的规范组合方式来构建整个设计方案，从而<code>提升设计效能</code>。</p>",2)),l(a,{src:"ui/81.png"}),e[9]||(e[9]=n('<div class="tip custom-block"><p class="custom-block-title">👀 组件化设计思维 3 个关键点</p><p>• 完整组件方案：将组件视为一个独立的产品，从多维度，多场景输出组件的方案和组合标准。</p><p>• 组件化思维：从需求出发，拆解页面表达结构和所需组件。</p><p>• 通用页面规则：通用的页面与组件的栅格体系及替换规则。</p></div><h3 id="搭建每个组件" tabindex="-1">搭建每个组件 <a class="header-anchor" href="#搭建每个组件" aria-label="Permalink to &quot;搭建每个组件&quot;">​</a></h3><p>以警告提示<code>（Alert）</code>为例，演示单个组件的建立方法。</p><h4 id="定义组件" tabindex="-1">定义组件 <a class="header-anchor" href="#定义组件" aria-label="Permalink to &quot;定义组件&quot;">​</a></h4><p>根据业务定义警告提示的使用场景，警告提示用于重要信息的提醒，采用非浮层的方式展现在页面顶部，被动出现，且不会自动关闭。</p>',5)),l(a,{src:"ui/30.png"}),e[10]||(e[10]=o("h4",{id:"拆分组件",tabindex:"-1"},[d("拆分组件 "),o("a",{class:"header-anchor",href:"#拆分组件","aria-label":'Permalink to "拆分组件"'},"​")],-1)),e[11]||(e[11]=o("p",null,"这一步是将组件拆分为元件。对警告组件进行拆分后得到如下：",-1)),l(a,{src:"ui/31.png"}),e[12]||(e[12]=n('<h4 id="重组输出" tabindex="-1">重组输出 <a class="header-anchor" href="#重组输出" aria-label="Permalink to &quot;重组输出&quot;">​</a></h4><p>根据业务场景，我们把各个<code>元件</code>重组为<code>组件</code>，建成<code>组件集</code>，并定义各种组件的<code>使用规则</code>。</p><h3 id="输出文档并替换到产品中" tabindex="-1">输出文档并替换到产品中 <a class="header-anchor" href="#输出文档并替换到产品中" aria-label="Permalink to &quot;输出文档并替换到产品中&quot;">​</a></h3><p>在<code>组件库</code>建立完成后，只有在日常设计中真正使用组件库，提高组件库在设计稿中的覆盖率，才能真正达到组件库的效果。这就要求我们要输出一份<code>完整的组件库描述文档</code>，在<code>团队中进行推广</code>，<code>加强设计团队的公用意识</code>。另外，我们还要与开发工程师配合逐步完成现有页面的<code>组件替换</code>。</p><h3 id="定期维护组件库" tabindex="-1">定期维护组件库 <a class="header-anchor" href="#定期维护组件库" aria-label="Permalink to &quot;定期维护组件库&quot;">​</a></h3><p>组件库的内容并非一成不变，而是在不断地更新，以保证所包含的组件都是最新和有用的。与其他数据一样，组件也会有增删改。</p><div class="tip custom-block"><p class="custom-block-title">🔎</p><p><strong>增</strong>：当有新的组件产生时，我们需要通过判断它的<code>拓展性</code>和<code>复用率</code>，以确定是否将它<code>入库</code>。</p><p><strong>删</strong>：随着产品的不断升级迭代，如果某个组件已经不用或复用率很低时，我们可以考虑是否要将它删除。</p><p><strong>改</strong>：不可避免的，组件会随着业务而进行升级，我们可以通过<code>数据埋点</code>和 <code>A/B test</code> 的方式来确定某个组件是否要进行改动。</p></div><h2 id="控件规范" tabindex="-1">控件规范 <a class="header-anchor" href="#控件规范" aria-label="Permalink to &quot;控件规范&quot;">​</a></h2><p>控件是指产品界面中可操作的部件，我们也称元件，与组件是有一些区别的。控件翻译为 <code>Control</code>，组件翻译为 <code>Component</code>。</p><p>通俗的解释说法就是组件为多个元素组合而成，控件为单一元素组合而成。</p><p>常用的 UI 控件（<code>Control</code>）：<code>按钮、输入框、下拉列表、下拉菜单、单选框、复选框、选项卡、搜索框、分页、切换按钮、步进器、进度条、角标</code>等。</p><p>以下列举一些我们在 APP 设计规范中整理的内容。</p><h3 id="按钮" tabindex="-1">按钮 <a class="header-anchor" href="#按钮" aria-label="Permalink to &quot;按钮&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">👀 按钮有 5 个状态：</p><p>正常、点击、悬停、加载、禁用。</p></div><p>需要在规范中分别罗列出这五个状态，标注上对应的按钮<code>填充色、边框色、圆角值、按钮宽度和高度</code>，按钮<code>文本大小、颜色值</code>。如果是图标按钮的话，除了上述参数值以外，还需要标注 <code>icon</code> 和按钮文本之间的间距，<code>icon</code> 图标的大小。</p>',15)),l(a,{src:"ui/87.png"}),e[13]||(e[13]=o("h3",{id:"输入框",tabindex:"-1"},[d("输入框 "),o("a",{class:"header-anchor",href:"#输入框","aria-label":'Permalink to "输入框"'},"​")],-1)),e[14]||(e[14]=o("p",null,[d("用于单行信息录入文字上下居中显示，支持键盘录入和剪切板输入文本，对特定格式的文本进行处理："),o("code",null,"密码隐藏显示、身份证、卡号分段显示"),d("，标注宽高。")],-1)),l(a,{src:"ui/88.png"}),e[15]||(e[15]=o("h3",{id:"选择",tabindex:"-1"},[d("选择 "),o("a",{class:"header-anchor",href:"#选择","aria-label":'Permalink to "选择"'},"​")],-1)),e[16]||(e[16]=o("p",null,[d("选择可分为"),o("code",null,"单选"),d("与"),o("code",null,"多选"),d("，并且也有五种不同状态："),o("code",null,"未选择、已选中、未选悬停、已选失效、未选失效项"),d("。规范中需展示出所有效果状态。")],-1)),l(a,{src:"ui/89.png"}),e[17]||(e[17]=o("h3",{id:"选项卡",tabindex:"-1"},[d("选项卡 "),o("a",{class:"header-anchor",href:"#选项卡","aria-label":'Permalink to "选项卡"'},"​")],-1)),e[18]||(e[18]=o("p",null,[d("用于让用户在不同的视图中进行切换。标签数量，一般是 "),o("code",null,"2-5"),d(" 个；其中，标签中的文案需要精简，一般是 "),o("code",null,"2-4"),d(" 个字。每个标签所占的宽度可适当调整。")],-1)),l(a,{src:"ui/90.png"}),e[19]||(e[19]=o("h3",{id:"滑动开关",tabindex:"-1"},[d("滑动开关 "),o("a",{class:"header-anchor",href:"#滑动开关","aria-label":'Permalink to "滑动开关"'},"​")],-1)),e[20]||(e[20]=o("p",null,[d("滑动开关有"),o("code",null,"两个互斥"),d("的选项（"),o("code",null,"例如开/关、是/否、启动/禁止"),d("），它是用来"),o("code",null,"打开"),d("或者"),o("code",null,"关闭"),d("选项的控件。选择其中一个选项会立即执行操作。")],-1)),l(a,{src:"ui/91.png"}),e[21]||(e[21]=o("h3",{id:"进度条",tabindex:"-1"},[d("进度条 "),o("a",{class:"header-anchor",href:"#进度条","aria-label":'Permalink to "进度条"'},"​")],-1)),e[22]||(e[22]=o("p",null,"用于向用户展示步骤的步数以及当前所处的进程。",-1)),l(a,{src:"ui/92.png"}),e[23]||(e[23]=o("h3",{id:"角标",tabindex:"-1"},[d("角标 "),o("a",{class:"header-anchor",href:"#角标","aria-label":'Permalink to "角标"'},"​")],-1)),e[24]||(e[24]=o("p",null,"用于聚合型的消息提示，一般出现在通知图标或头像的右上角，通过醒目的视觉形式吸引用户眼球。",-1)),l(a,{src:"ui/93.png"}),e[25]||(e[25]=o("h2",{id:"组件规范",tabindex:"-1"},[d("组件规范 "),o("a",{class:"header-anchor",href:"#组件规范","aria-label":'Permalink to "组件规范"'},"​")],-1)),e[26]||(e[26]=o("p",null,[d("常用的 UI 组件（"),o("code",null,"Component"),d("）："),o("code",null,"表格、对话框、提示条、气泡提示、日期选择器、多级选择器、标签输入框、组合框、上传"),d("等。")],-1)),o("div",b,[e[1]||(e[1]=o("p",{class:"custom-block-title"},"👀 Ant design 移动组件",-1)),l(a,{src:"ui/94.png"})]),e[27]||(e[27]=o("p",null,[d("在 "),o("code",null,"skecth"),d(" 中设计时，使用 "),o("code",null,"Symbol"),d(" 创建的组件，在后期整理时，可以节省许多的时间。")],-1)),o("div",m,[e[2]||(e[2]=o("p",{class:"custom-block-title"},[d("👀 当然，"),o("code",null,"Figma"),d(" 也同样具备这样的能力，你所创建的组件都存在于 "),o("code",null,"Assets"),d(" 中。")],-1)),l(a,{src:"ui/95.png"})]),e[28]||(e[28]=n('<h2 id="缺省页面" tabindex="-1">缺省页面 <a class="header-anchor" href="#缺省页面" aria-label="Permalink to &quot;缺省页面&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">INFO</p><p>• <strong>空状态页面</strong>：显示对应的页面空状态的图标，增加相应的引导按钮。</p><p>• <strong>无网络状态</strong>：在没有连接到网络时的提示页面。</p><p>• <strong>404&amp;505</strong>：发生未知错误时的页面。</p></div>',2)),l(a,{src:"ui/96.png"})])}const C=s(u,[["render",h]]);export{v as __pageData,C as default};
