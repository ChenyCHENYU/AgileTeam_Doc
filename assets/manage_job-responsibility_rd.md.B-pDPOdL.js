/**
 * name: agile-team-doc
 * version: v2.1.0
 * description: 敏捷团队构建的线上文档，希望同时帮助到团队伙伴和社区的大家
 * author: CHENY <ycyplus@gmail.com>
 * homepage: https://github.com/ChenyCHENYU/AgileTeam_Doc
 */
import{_ as s,C as r,c as u,o as i,aQ as t,G as l,j as e,w as n,a as o}from"./chunks/framework.BjhQmtN6.js";const x=JSON.parse('{"title":"RD：前端工程师( Front End Engineer)","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"manage/job-responsibility/rd.md","filePath":"manage/job-responsibility/rd.md","lastUpdated":1736755284000}'),h={name:"manage/job-responsibility/rd.md"};function b(p,d,q,k,m,g){const a=r("FontColor"),c=r("ElCard");return i(),u("div",null,[d[38]||(d[38]=t('<h1 id="rd-前端工程师-front-end-engineer" tabindex="-1">RD：前端工程师( Front End Engineer) <a class="header-anchor" href="#rd-前端工程师-front-end-engineer" aria-label="Permalink to &quot;RD：前端工程师( Front End Engineer)&quot;">​</a></h1><blockquote><p>定义：从职业角度来说，现在的大前端模式，前端开发工程师不仅仅要将跨平台的界面高质量还原，保证良好的页面性能和交互之外；还要聚焦业务，能做业务串讲和分析，从面向界面到面向业务，业务驱动转变的开发模式，进而最好可以去定义接口文档，提升前后端接口开发效率；并能为自己的界面开发提供性能优化，当然，这些基础都需要高质量的组件化构建你的前端应用。</p></blockquote><h2 id="⚖️-履职规范" tabindex="-1">⚖️ 履职规范 <a class="header-anchor" href="#⚖️-履职规范" aria-label="Permalink to &quot;⚖️ 履职规范&quot;">​</a></h2><h3 id="一、需求理解与评审" tabindex="-1">一、需求理解与评审 <a class="header-anchor" href="#一、需求理解与评审" aria-label="Permalink to &quot;一、需求理解与评审&quot;">​</a></h3><h4 id="_1-参与需求讨论" tabindex="-1">1. 参与需求讨论 <a class="header-anchor" href="#_1-参与需求讨论" aria-label="Permalink to &quot;1. 参与需求讨论&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>在<code>项目立项</code>阶段，与 <strong>产品经理</strong>、<strong>后端开发</strong> 人员等一起参与需求会议。<strong>产品经理</strong> 介绍软件的<code>功能需求和用户场景</code>，前端开发<code>认真倾听</code>并提出与用户界面（<code>主要流程和交互</code>）相关的<code>问题和建议</code>。例如，对于业务系统，了解 <strong>业务呈现、功能交互</strong>，便于快速<code>梳理前期准备</code>工作，为后续开展的 <strong>技术选型，配置，甚至如何抽离页面组件</strong> 充分准备。</p></div>',6)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[0]||(d[0]=o(" 💡")),d[1]||(d[1]=e("p",null,[o("通过参与"),e("code",null,"需求讨论"),o("，前端开发能够"),e("code",null,"深入了解"),o("项目的"),e("code",null,"整体目标"),o("和"),e("code",null,"功能需求"),o("，从前端视角为产品设计提供"),e("code",null,"可行性建议"),o("，确保后续前端开发工作"),e("code",null,"符合统一标准"),o("，兼容 "),e("strong",null,"客户体验"),o(" 和 "),e("strong",null,"业务逻辑"),o("。")],-1))]),_:1,__:[0,1]}),d[39]||(d[39]=t('<br><h5 id="🦴-输入" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>这个阶段, 根据<strong>需求参与和讨论</strong>，应该就要开始<code>聚焦输入输出</code>，让业务和技术<code>双向绑定</code>，有一个相对基本的<code>前端实施预案</code>，应出具<code>前端技术需求建议书</code>，一方面给到 <strong>产品组</strong>，一方面给到 <strong>专业组</strong>。</p><h4 id="_2-理解业务逻辑和数据流程" tabindex="-1">2. 理解业务逻辑和数据流程 <a class="header-anchor" href="#_2-理解业务逻辑和数据流程" aria-label="Permalink to &quot;2. 理解业务逻辑和数据流程&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>在<code>评审前后</code>，如<code>需求文档</code>或<code>技术方案</code>讲解会上，前端开发能<code>反讲业务逻辑</code>和数据在系统中的流转过程。了解后端提供的<code>数据接口</code>和<code>数据格式</code>，以及前端如何展示和处理这些数据。比如，对于一个通用界面，明白用户操作的功能点，交互数据是如何从前端表单提交到后端，需要哪些字段和数据，<code>数据类型</code>大概什么样，又如何从后端 <strong>获取并展示</strong> 在系统界面中的，要有一个<code>立体的意识形态</code>界面呈现。</p></div>',5)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[2]||(d[2]=o(" 💡")),d[3]||(d[3]=e("p",null,[o("前端不是"),e("strong",null,"页面仔"),o("，不是"),e("strong",null,"螺丝工"),o("，只有清晰"),e("code",null,"理解业务逻辑"),o("和"),e("code",null,"数据流程"),o("，前端开发才能"),e("strong",null,"正确、主动、高效、主导"),o("的的构建用户界面，趋同于实现与后端的接口"),e("code",null,"低成本"),o("联调的有效交互，保证数据的"),e("code",null,"准确展示"),o("和字段的"),e("code",null,"精确回溯"),o("，从而聚焦"),e("code",null,"页面性能流畅"),o("等体验，对自己职业"),e("strong",null,"要求高点，标准高点"),o("，才能更好的为"),e("code",null,"经营指标"),o("，为"),e("code",null,"能效赋能"),o("。")],-1))]),_:1,__:[2,3]}),d[40]||(d[40]=t('<br><h5 id="🦴-输入-1" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-1" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>这个阶段, 根据需求的一个<code>评审</code>，深入的了解，不但可以<code>有效串清</code>范围内的业务交互，确定<code>业务流程</code>，<code>功能模块</code>，<code>页面组件</code>，<code>数据模型</code>等等。</p><h4 id="🎗️-输出" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h4><blockquote><p><code>01-前端技术需求建议书</code></p></blockquote><h3 id="二、技术选型与架构设计" tabindex="-1">二、技术选型与架构设计 <a class="header-anchor" href="#二、技术选型与架构设计" aria-label="Permalink to &quot;二、技术选型与架构设计&quot;">​</a></h3><h4 id="_1-前端技术选型" tabindex="-1">1. 前端技术选型 <a class="header-anchor" href="#_1-前端技术选型" aria-label="Permalink to &quot;1. 前端技术选型&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>项目<code>规划阶段</code>，根据<code>项目需求</code>、<code>团队技术栈</code>和<code>性能要求</code>等因素，<strong>配置合适的前端技术框架和工具</strong>。例如，对于一个业务系统项目，考虑到<code>项目规模</code>和<code>开发效率</code>，要做哪些<code>框架预设和准备</code>，要设计和调整哪些<code>业务组件</code>，要<code>预研</code>哪些工具库，要<code>裁剪</code>哪些项目<code>约定俗成</code>的<code>专业标准</code>等等。</p></div>',8)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[4]||(d[4]=o(" 💡")),d[5]||(d[5]=e("p",null,[o("合理的"),e("code",null,"技术选型准备"),o("能够提高开发效率，保证项目的"),e("code",null,"可维护性和性能"),o("，同时也有利于"),e("code",null,"专业协作和技术积累"),o("。不同的项目需求可能适合"),e("code",null,"不同的技术方案"),o("，前端开发需要"),e("code",null,"综合评估"),o("各种因素做出"),e("code",null,"最佳选择"),o("，做好充分的准备工作，不要等业务砸下来了再吭哧吭哧，不一定是让你搭个"),e("code",null,"脚手架"),o("才是准备工作，"),e("strong",null,"基于业务，高于业务"),o("。")],-1))]),_:1,__:[4,5]}),d[41]||(d[41]=t('<br><h5 id="🦴-输入-2" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-2" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>根据项目<code>场景</code>、<code>诉求</code>，以及专<code>业标准化</code>的<code>统管</code>要求，<code>高效协同</code>的目的，找参考做分析，讨论验证。。</p><h4 id="_2-参与前端架构设计" tabindex="-1">2. 参与前端架构设计 <a class="header-anchor" href="#_2-参与前端架构设计" aria-label="Permalink to &quot;2. 参与前端架构设计&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>与团队中的<code>架构人员</code>和其他前端开发人员一起，围绕<code>专业组</code>，<code>设计和优化</code>前端项目的架构。确定项目的<code>目录结构</code>、<code>模块划分</code>、<code>组件通信</code>方式、<code>库包模块</code>等。比如，在一个大型系统应用中，将前端项目划分为多个模块，每个模块对应不同的业务功能，<code>细化</code>模块之间<code>定义和要求</code>，上下螺旋，<code>贯穿和完善</code>专业组的<code>标准</code>。</p></div>',5)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[6]||(d[6]=o(" 💡")),d[7]||(d[7]=e("p",null,[o("良好的"),e("code",null,"前端架构设计"),o("能够提高代码的"),e("code",null,"可读性"),o("、"),e("code",null,"可维护性"),o("和"),e("code",null,"可扩展性"),o("，便于团队"),e("code",null,"协作开发"),o("和后续功能迭代。前端架构需要考虑到项目的"),e("code",null,"复杂性"),o("、"),e("code",null,"性能要求"),o("以及未来的"),e("code",null,"重构调整"),o("，以"),e("code",null,"持续构建"),o("的思维，设计一个稳定且灵活的前端系统。")],-1))]),_:1,__:[6,7]}),d[42]||(d[42]=t('<br><h5 id="🦴-输入-3" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-3" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>根据项目项目的<code>体量大小</code>、<code>复杂程度</code>，以及未来的<code>扩展性</code>和<code>不确定性</code>需求对架构模式的要求和影响。</p><h4 id="🎗️-输出-1" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-1" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h4><blockquote><p><code>02-前端技术架构选型说明书</code></p></blockquote><h3 id="三、页面开发与实现" tabindex="-1">三、页面开发与实现 <a class="header-anchor" href="#三、页面开发与实现" aria-label="Permalink to &quot;三、页面开发与实现&quot;">​</a></h3><h4 id="_1-ui-设计及原型实现" tabindex="-1">1. UI 设计及原型实现 <a class="header-anchor" href="#_1-ui-设计及原型实现" aria-label="Permalink to &quot;1. UI 设计及原型实现&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>根据设计师提供的 <code>高保真设计稿</code>，统一的<code>设计标准</code>要求，<code>精确还原</code>设计稿，当然，原则上需<code>完全</code>跟设计稿保持一致，若在没有设计稿的前提下，按照统一的<code>组件标准</code>，跟原型保持一致，请务必抖掉上下游吐槽的，<strong>设计不如原型</strong>，<strong>前端实现不如设计</strong>的<code>包袱</code>和<code>刻板印象</code>。</p></div>',8)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[8]||(d[8]=o(" 💡")),d[9]||(d[9]=e("p",null,[o("前端开发的主要任务之一就是将"),e("code",null,"设计稿"),o("转化为可交互的用户界面，需要"),e("code",null,"尊重设计"),o("，"),e("code",null,"尊重原型"),o("。同时，要关注"),e("code",null,"客户体验"),o("，确保页面的"),e("code",null,"美观性"),o("、"),e("code",null,"易用性"),o("和"),e("code",null,"性能流畅度"),o("。")],-1))]),_:1,__:[8,9]}),d[43]||(d[43]=t('<br><h5 id="🦴-输入-4" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-4" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>ui 提供<code>统一规范的设计稿</code>或者整理<code>内审过后的产品原型</code>，前端针对<code>高精度还原</code>，将相似的<code>功能交互剥离</code>出来，形成<code>组件</code>，快速构建出来<code>可复用</code>的前端界面。</p><h4 id="_2-前端交互开发" tabindex="-1">2. 前端交互开发 <a class="header-anchor" href="#_2-前端交互开发" aria-label="Permalink to &quot;2. 前端交互开发&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>为<code>标准化的界面</code>添加各种交互功能，当然，在这里你应该统一按照<code>前端标准组件化</code>的<code>数据驱动</code>，构建你的交互行为，交互的代码应按照<code>前端开发规范</code>来进行<code>逻辑代码</code>的编码，使其具备更好的<code>可读性</code>、<code>可维护性</code>、并给逻辑添加<code>有效的注释</code>。</p></div>',5)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[10]||(d[10]=o(" 💡")),d[11]||(d[11]=e("p",null,[o("交互功能是前端"),e("code",null,"业务驱动"),o("，"),e("code",null,"代码逻辑"),o("的核心部分。前端需要深入理解"),e("code",null,"业务逻辑"),o("，用户行为和需求，用代码实现更自然的交互效果，为了便于别人更好的"),e("code",null,"交叉和接手"),o("工作，甚至后续的"),e("code",null,"运维"),o("，交互逻辑的"),e("code",null,"注释"),o("，也是考究开发人员编码功底的一个体现。")],-1))]),_:1,__:[10,11]}),d[44]||(d[44]=t('<br><h5 id="🦴-输入-5" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-5" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>根据原型图交互逻辑，结合业务流程图，数据模型，以及前端标准化的业务组件等，有效输出精简的交互逻辑。</p><h4 id="_3-与后端接口对接" tabindex="-1">3. 与后端接口对接 <a class="header-anchor" href="#_3-与后端接口对接" aria-label="Permalink to &quot;3. 与后端接口对接&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>理想一点来说，最好能前端提供界面数据呈现字段的<code>数据结构</code>，基于数据结构构建<code>数据模型</code>去匹配组件，当然，这样最好，但也不强制要求；但是，最起码你要符合和精益 <code>restful</code> 的接口规范，避免源<code>数据污染</code>，上传和接收<code>冗余字段</code>，构建健康的接口，精简接口<code>数据获取和提交</code>的逻辑。</p></div>',5)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[12]||(d[12]=o(" 💡")),d[13]||(d[13]=e("p",null,[o("前后端"),e("code",null,"接口对接"),o("是数据交互和协同工作的"),e("code",null,"关键环节"),o("，处理不好这个环节，接口联调就容易是一个"),e("code",null,"黑洞"),o("。前端需要了解接口"),e("code",null,"标准规范"),o("、"),e("code",null,"请求方式"),o("、"),e("code",null,"参数格式"),o("和"),e("code",null,"返回值结构"),o("，确保数据的正确获取和发送，保证功能"),e("code",null,"完整性"),o("和数据"),e("code",null,"一致性"),o("；否则，就容易挤牙膏一样，一步一卡，要不呢，前端花大量时间"),e("code",null,"对标字段"),o("，"),e("code",null,"寻找数据"),o("，"),e("code",null,"处理数据"),o("，导致最后提交的数据也是乱七八糟，这里还要"),e("code",null,"反向的"),o("根据场景，对后端明确"),e("code",null,"数据要求"),o("，但是你连"),e("code",null,"数据格式"),o("和模型自己都没概念，你能要求个毛啊。")],-1))]),_:1,__:[12,13]}),d[45]||(d[45]=t('<br><h5 id="🦴-输入-6" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-6" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>最后根据<code>接口文档</code>，再则是<code>原型界面</code>的 <strong>数据格式呈现要求</strong>，以及充分 <code>mock</code> 自测好接口交互。</p><h4 id="🎗️-输出-2" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-2" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h4><blockquote><p><code>03-符合统一标准的组件化前端界面</code> | <code>04-带有清晰逻辑的交互注释</code> | <code>05-符合restful的接口处理</code></p></blockquote><h3 id="四、性能优化" tabindex="-1">四、性能优化 <a class="header-anchor" href="#四、性能优化" aria-label="Permalink to &quot;四、性能优化&quot;">​</a></h3><h4 id="_1-页面加载优化" tabindex="-1">1. 页面加载优化 <a class="header-anchor" href="#_1-页面加载优化" aria-label="Permalink to &quot;1. 页面加载优化&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>分析 <strong>页面加载过程中</strong> 的<code>性能瓶颈</code>，采取相应的<code>优化措施</code>。例如，<code>压缩和合并 CSS、JavaScript</code> 文件，<code>减少文件大小和请求次数</code>；<code>优化图片的加载</code>，使用合适的图片格式（<code>如 WebP</code>）和压缩工具，降低图片的<code>加载时间</code>；使用<code>懒加载</code>方式，<code>延迟加载页面</code>中不立即显示的内容，包括交互中的频繁操作按钮<code>请求接口</code>的，<code>节流，防抖</code>，还有<code>动态加载</code>等等。通过一系列优化意识，可以显著提高页面<code>流畅度</code>和<code>性能</code>。</p></div>',8)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[14]||(d[14]=o(" 💡")),d[15]||(d[15]=e("p",null,[o("前后端"),e("code",null,"接口对接"),o("是数据交互和协同工作的"),e("code",null,"关键环节"),o("，处理不好这个环节，"),e("code",null,"接口联调"),o("就容易是一个"),e("code",null,"黑洞"),o("。前端需要了解接口"),e("code",null,"标准规范"),o("、"),e("code",null,"请求方式"),o("、"),e("code",null,"参数格式"),o("和"),e("code",null,"返回值结构"),o("，确保数据的正确获取和发送，保证功能"),e("code",null,"完整性"),o("和数据"),e("code",null,"一致性"),o("；否则，就容易挤牙膏一样，一步一卡，要不呢，前端花大量时间"),e("code",null,"对标字段"),o("，"),e("code",null,"寻找数据"),o("，"),e("code",null,"处理数据"),o("，导致最后提交的数据也是乱七八糟，这里还要"),e("code",null,"反向的"),o("根据场景，对后端明确"),e("code",null,"数据要求"),o("，但是你连"),e("code",null,"数据格式"),o("和 "),e("strong",null,"数据模型"),o(" 自己都没概念，你能要求个毛啊。")],-1))]),_:1,__:[14,15]}),d[46]||(d[46]=t('<br><h5 id="🦴-输入-7" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-7" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>根据良好的 <strong>专业素养，职能要求</strong>，本着为输出和<code>交付负责</code>的敬业态度，矫情点说体现自己<code>专业赋能</code>也罢，免得最后被测试也好，产品也好，甚至客户，吐槽，这写的神马玩意，卡塞的一批。</p><h4 id="_2-代码性能优化" tabindex="-1">2. 代码性能优化 <a class="header-anchor" href="#_2-代码性能优化" aria-label="Permalink to &quot;2. 代码性能优化&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>在开发过程中，<strong>注重代码的性能优化</strong>。避免编写<code>复杂的嵌套循环</code>和<code>过多的不必要计算</code>，<code>优化函数调用</code>和算法实现。例如，让代码更加精简，逻辑更加清晰，克制各种<code>骚包炫技</code>的<code>回调和闭包</code>等，避免 <code>cv</code> 大法下大量无效的面条代码等等。</p></div>',5)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[16]||(d[16]=o(" 💡")),d[17]||(d[17]=e("p",null,[o("高效的"),e("code",null,"代码性能"),o("可以提高页面的"),e("code",null,"响应速度"),o("和整体"),e("code",null,"渲染效率"),o("，减少浏览器的负载和资源消耗。前端开发需要具备良好的"),e("code",null,"编程习惯"),o("和"),e("strong",null,"性能优化意识"),o("，"),e("code",null,"不断改进"),o("代码质量，有辣么一些代码洁癖和追求 "),e("code",null,"Write Better Code"),o(" 好不好，并且有标准版本记录可以回溯。")],-1))]),_:1,__:[16,17]}),d[47]||(d[47]=t('<br><h5 id="🦴-输入-8" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-8" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>根据开发规范，以及<code>专业组</code> 和 <code>Code Master</code> 的检查，测试及协同伙伴的反馈。</p><h4 id="🎗️-输出-3" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-3" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h4><blockquote><p><code>06-代码走查评审单</code> | <code>07-标准的版本管理及代码提交记录</code></p></blockquote><h3 id="五、测试与调试" tabindex="-1">五、测试与调试 <a class="header-anchor" href="#五、测试与调试" aria-label="Permalink to &quot;五、测试与调试&quot;">​</a></h3><p>算了，单元测试我就不要求了，以后做自有产品化再说。</p><h4 id="_1-集成测试与联调" tabindex="-1">1. 集成测试与联调 <a class="header-anchor" href="#_1-集成测试与联调" aria-label="Permalink to &quot;1. 集成测试与联调&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>在前端页面与后端<code>接口集成</code>后，进行<code>集成测试</code>。模拟客户的实际操作流程，验证前端与后端之间的数据交互和功能协同是否正常。与后端开发人员一起进行联调，<code>及时解决</code>接口数据格式不一致、请求<code>响应异常</code>等问题。例如，在一个功能的测试中，检查前端是否正确将数据发送到后端，后端是否返回正确的结果，并确保前端相应的页面跳转和提示信息展示。</p></div>',9)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[18]||(d[18]=o(" 💡")),d[19]||(d[19]=e("p",null,[o("集成测试和联调是确保整个系统功能"),e("code",null,"完整性"),o("和"),e("code",null,"稳定性"),o("的关键环节。通过与后端的"),e("code",null,"协同测试"),o("，可以发现并解决前后端集成过程中出现的各种问题，保证系统在"),e("code",null,"测试及生产"),o("运行环境中的正常，具备 "),e("code",null,"showcase"),o(" 发起"),e("code",null,"提测"),o("条件。")],-1))]),_:1,__:[18,19]}),d[48]||(d[48]=t('<h4 id="_2-调试测改与问题索查" tabindex="-1">2. 调试测改与问题索查 <a class="header-anchor" href="#_2-调试测改与问题索查" aria-label="Permalink to &quot;2. 调试测改与问题索查&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>在开发和测试过程中，当出现错误或异常情况时。通过查看控制台输出的错误信息、<code>调试脚本代码</code>、<code>分析网络请求</code>和<code>响应</code>等方式，<strong>定位问题的根源</strong>。例如，当 <code>showcase</code>、<code>提测</code>、<code>bug 反馈</code>过来的时候，前端开发需要如何快速锁定问题，解决问题，并且去<strong>深入索查关联和潜藏问题</strong>，高效解决问题，避免开发和测试之间的来回拉扯。</p></div>',2)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[20]||(d[20]=o(" 💡")),d[21]||(d[21]=e("p",null,[o("调试测改是前端"),e("code",null,"开发能力"),o("体现的核心的技能之一。在面对各种复杂的问题时，能够快速准确地定位和解决问题，保证项目的顺利进行。熟练掌握方"),e("code",null,"法、工具和技巧"),o("可以更好的"),e("code",null,"提高开发效率"),o("，"),e("code",null,"提升质量保障"),o(",减少问题沟通及解决时间。")],-1))]),_:1,__:[20,21]}),d[49]||(d[49]=t('<br><h4 id="🦴-输入-9" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-9" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h4><p>根据<code>开发计划</code>，项目经理的<code>任务分工</code>，<code>截止日期</code>，前端快速完成前后端的<code>联调自测</code>，按照测试的要求，发起 <code>showcase</code> 和<code>提测申请</code>。</p><h4 id="🎗️-输出-4" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-4" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h4><blockquote><p><code>08-showcase 申请单</code> | <code>09-提测申请单</code></p></blockquote><p>根据输入并将输出物同步抄送至钉钉研发群里，让协同和职能角色更清晰的了解到项目的进度和质量情况。</p><h3 id="六、团队协作与知识分享" tabindex="-1">六、团队协作与知识分享 <a class="header-anchor" href="#六、团队协作与知识分享" aria-label="Permalink to &quot;六、团队协作与知识分享&quot;">​</a></h3><h4 id="_1-与项目成员有效协作" tabindex="-1">1. 与项目成员有效协作 <a class="header-anchor" href="#_1-与项目成员有效协作" aria-label="Permalink to &quot;1. 与项目成员有效协作&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>在项目开发过程中，为<code>项目负责</code>，与产品、设计、后端开发人员等<code>有效而密切</code>的合作。与产品沟通<code>需求和变更</code>预案；与设计确保 UI 设计的实现效果<code>符合预期</code>，沟通设计稿中可能存在的前端<code>实现难度</code>问题；与后端进行<code>接口对接和联调</code>，共同解决数据交互和系统集成过程中出现的问题；及时向项目经理<code>反馈风险</code>和<code>应对建议</code>。</p></div>',9)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[22]||(d[22]=o(" 💡")),d[23]||(d[23]=e("p",null,[o("软件开发是一个 "),e("code",null,"TEAM"),o("协作的过程，前端开发需要与不同角色的人员进行"),e("code",null,"有效的沟通和协作"),o("，共同推进项目的进展。良好的团队协作能够"),e("strong",null,"提高工作效率，减少误解和冲突"),o("，保证项目的"),e("code",null,"质量"),o("和"),e("code",null,"按时交付"),o("。")],-1))]),_:1,__:[22,23]}),d[50]||(d[50]=t('<br><h5 id="🦴-输入-10" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-10" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>根据项目经理指派的，执行的<code>禅道任务</code> 展开具体开发工作，做到及时维护，有效维护就离不开贯穿 <strong>为上游负责，为下游服务</strong> 的宗旨。</p><h5 id="🎗️-输出-5" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-5" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h5><blockquote><p><code>10-禅道任务状态管理</code></p></blockquote><h4 id="_2-知识分享与技术交流" tabindex="-1">2. 知识分享与技术交流 <a class="header-anchor" href="#_2-知识分享与技术交流" aria-label="Permalink to &quot;2. 知识分享与技术交流&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>定期参加<code>项目及专业组</code>内部的<code>技术分享会</code>，分享自己在前端开发过程中的<code>场景化</code>的 <strong>开发经验和技术心得</strong>。向团队成员介绍新的前端技术和工具，<strong>共同学习和探讨</strong> 如何<code>提升团队的技术水平</code>。例如，分享自己在使用某个前端技术解决业务问题的的经验和技巧，或者介绍一种新的前端技术库的特点和应用场景。积极参与<code>专业组内的技术交流</code>活动，了解并学习前端技术的最新<code>发展动态</code>，将有用的收获<code>反哺团队</code>并应用到实际项目中。</p></div>',7)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[24]||(d[24]=o(" 💡")),d[25]||(d[25]=e("p",null,[o("知识分享和技术交流有助于团队成员的 "),e("strong",null,"共同成长和技术提升"),o("，既可以解决"),e("code",null,"场景疑难杂症"),o("，也可以 "),e("strong",null,"拉通专业组的技术协同壁垒"),o(" ，更可以起到"),e("code",null,"有效沉淀"),o("的作用。前端技术的"),e("code",null,"场景化，业务化，专业化"),o("，通过分享和交流，团队成员可以相互学习，拓宽技术视野，提高团队的整体"),e("code",null,"技术实力"),o("和"),e("code",null,"创新能力"),o("，更好地应对项目中的各种"),e("code",null,"技术挑战"),o("。")],-1))]),_:1,__:[24,25]}),d[51]||(d[51]=t('<br><h5 id="🦴-输入-11" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-11" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>项目中的<code>专业技术难题</code>，<strong>专业组的知识沉淀、技术分享指标</strong>，以及自己的<code>技术成长心得</code>，都可。</p><h5 id="🎗️-输出-6" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-6" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h5><blockquote><p><code>11-知识分享成果上传语雀</code></p></blockquote><h3 id="七、交付运维与技术升级" tabindex="-1">七、交付运维与技术升级 <a class="header-anchor" href="#七、交付运维与技术升级" aria-label="Permalink to &quot;七、交付运维与技术升级&quot;">​</a></h3><h4 id="_1-现有项目技术支持" tabindex="-1">1. 现有项目技术支持 <a class="header-anchor" href="#_1-现有项目技术支持" aria-label="Permalink to &quot;1. 现有项目技术支持&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>在项目上线后，负责对前端代码进行<code>技术维护</code>，验收后交付运维提供<code>技术支持</code>。上线期间及时处理 <strong>质量跟踪小组</strong> 反馈的问题和缺陷，如页面加载缓慢、功能异常等。对<code>代码进行优化和改进</code>，以提高系统的性能和稳定性。例如，根据走查审计，或者问题处理过程中，自主的优化漏洞代码。</p></div>',8)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[26]||(d[26]=o(" 💡")),d[27]||(d[27]=e("p",null,[o("其实除了上线跟踪问题处理之外，核心更在于验收后，"),e("strong",null,"交付给运维伙伴的项目代码"),o("，是否能使运维人员"),e("code",null,"平滑接手"),o("，使其有"),e("code",null,"自主运维"),o("的能力，就在于"),e("code",null,"上线跟踪"),o("，甚至从 "),e("strong",null,"项目开始到验收环节"),o(" 对于"),e("code",null,"代码标准化"),o("的编写，除却需求复杂化变更后，核心的技术难点问题，不应该遗留"),e("code",null,"技术债务"),o("和"),e("code",null,"心智包袱"),o("，这些其实都可以从交付的代码得以体现。")],-1))]),_:1,__:[26,27]}),d[52]||(d[52]=t('<br><h5 id="🦴-输入-12" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-12" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>根据运维交接清单要求，前端负责人及具体执行人，将前端代码、文档，串讲完整性的交付运维。</p><h5 id="🎗️-输出-7" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-7" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h5><blockquote><p><code>12-前端代码交付清单及干系人确认签字</code></p></blockquote><h4 id="_2-项目升级与迭代" tabindex="-1">2. 项目升级与迭代 <a class="header-anchor" href="#_2-项目升级与迭代" aria-label="Permalink to &quot;2. 项目升级与迭代&quot;">​</a></h4><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>随着业务的发展和客户需求的变化，根据<code>增补需求</code>或<code>长期运维协议</code>，参与项目的<code>升级和迭代</code>工作。根据新的<code>需求和设计</code>，对前端<code>页面和功能</code>进行<code>更新和扩展</code>。前端开发根据新的设计要求，对功能进行 <strong>重新开发和整合</strong>，同时确保与现有系统的<code>兼容性</code>和<code>一致性</code>。在升级过程中，要注意对现有功能的影响，进行 <strong>充分的测试和验证</strong>，确保升级后的 <strong>系统稳定可靠</strong>。</p></div>',7)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[28]||(d[28]=o(" 💡")),d[29]||(d[29]=e("p",null,[o("为了保持系统的"),e("code",null,"扩展性"),o("和"),e("code",null,"适用性"),o("，部分项目可能需要不断进行"),e("code",null,"升级和迭代"),o("，这时候，可能存在"),e("code",null,"技术升级"),o("的方案，就需要具体的 "),e("strong",null,"开发执行人发起专业组决策方案"),o("。")],-1))]),_:1,__:[28,29]}),d[53]||(d[53]=t('<br><h5 id="🦴-输入-13" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-13" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>这一条的<code>输入输出</code>在交付项目中，或 <strong>不是必须</strong>，可根据实际的<code>项目诉求</code>，或者<code>项目产品化</code>的要求，预测未来<code>产品规划</code>，根据部门<code>实际要求</code>，再行预设和准备<code>技术升级</code>方案。</p><h5 id="🎗️-输出-8" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-8" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h5><blockquote><p><code>13-运维交接资料清单</code> | <code>14-前端技术升级方案书</code></p></blockquote><h2 id="✨-前端-leader" tabindex="-1">✨ 前端 Leader <a class="header-anchor" href="#✨-前端-leader" aria-label="Permalink to &quot;✨ 前端 Leader&quot;">​</a></h2><blockquote><p>前端负责人不再是长期陷入某一个项目中吭哧的写代码，而是需要梳理和服务前端，基于小组动态调配和把控前端的输入输出，围绕部门整体要求下的，项目建设、专业提升及分享沉淀，以及标准化要求，培训管理等内建工作。</p></blockquote><div class="info custom-block"><p class="custom-block-title">要求及期许：</p><p>由组长拟定小组管理体系和考核标准，明确小组的职责和目标，上报部门确认，最终完成小组管理标准化体系化落地，评审定版，版本管理，上传语雀，上报公司归档批复，部门对小组预期要求，应包括但不限于如下内容；</p></div><h3 id="_1-管理思想" tabindex="-1">1. 管理思想 <a class="header-anchor" href="#_1-管理思想" aria-label="Permalink to &quot;1. 管理思想&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>管理是一种行为和动作，执行的目的和过程，应该都有相应的理论作为指导和参考依据。认知，执行，验证缺一不可，我们的管理人员，需要做好角色转变，首先要提升和改变自己的认知，然后要去理顺章程，理顺了，再去说，人、事、物如何去有效调配管理，管理不能仅浮于表面，也不是某一个点的问题，而是基于面的，网状的，立体而发散的，要尽量的让自己知其然，知其所以然，用好的，优秀东西，同化和影响，引导，做这些之前，你可能需要深入了解被管理的人员，他们的能力，擅长的领域，工作的安排，专业的输入输出，优点以及缺点，甚至是他们的诉求和成长以及发展和价值。</p></div>',10)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[30]||(d[30]=o(" 💡")),d[31]||(d[31]=e("p",null,"那么作为组长，你要做人才识别，做一下小组的人盘盘点，你要有盘点的思路和章程，你对专业小组管理的理解，对同属性伙伴专业输出的识别，有一套方法论，基于这个方法论，针对动态的业务场景和公司战略需要，有人才分类匹配的依据，并且针对态度能力的融合，可以针对性的输出管理办法和考核标准，让大家知道需要把做的事儿，如何职业化的去做到什么程度，并把它的价值和能效体现起来，激活人才，凝聚一体，如臂指使。",-1))]),_:1,__:[30,31]}),d[54]||(d[54]=t('<br><h5 id="🦴-输入-14" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-14" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>公司及部门对于专业组管理要求，年底公司各组织人员的人才盘点动作，但希望各负责人把这一块做的超出预期，莫要流于形式的交作业，而是真的在其位谋其政，有一些自己的思考，沉淀，总结和章程在里面。</p><h5 id="🎗️-输出-9" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-9" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h5><blockquote><p><code>01-人才盘点章程</code> | <code>02-人才模型（方法）</code> | <code>03-人才分类（依据）</code> | <code>04-小组管理办法</code> | <code>05-考核标准</code></p></blockquote><p>尔后由 TEC 小组参与评审后定稿公司级终审。</p><h3 id="_2-管理动作" tabindex="-1">2. 管理动作 <a class="header-anchor" href="#_2-管理动作" aria-label="Permalink to &quot;2. 管理动作&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>小组管理应该做哪些事情呢？应该有哪些事件源和动作协同呢？如何穿针引线的去引导和合力呢？对管理动作的执行，有哪些动机和预判呢？对于认知和能力，如何扁平化达成共识呢？我们的管理者，不妨好好思考一下，它应包含但不限于以下内容。</p></div>',8)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[32]||(d[32]=o(" 💡")),d[33]||(d[33]=e("p",null,"那么简单直白一点说，一线的管理动作是需要一些行为执行来拉通分工协同的，动作就是其中一个最直观的抓手；比如小组内部分享，识别擅长和偏好，优缺点，引导性和针对性的使成员共同成长；小组双周会，调动小组的集体力量和智慧解决点点滴聚焦的问题，以面破点，落地解决问题，体现赋能，也为后续的工作计划和人员调配有一个前置清晰的依据。",-1))]),_:1,__:[32,33]}),d[55]||(d[55]=t('<br><h5 id="🦴-输入-15" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-15" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>可能是项目的刚需，可能是标准化体系的内建，可能是能力成长的需要，也可能是工作的把控、成员的援助诉求、业务支撑点的洞察、离散性的产品问题等等，不一而足；</p><h5 id="🎗️-输出-10" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-10" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h5><blockquote><p><code>06-小组分享培训计划</code> | <code>07-小组双周会及成员问题跟进表</code></p></blockquote><p>分享培训频次（至少<code>月度 2 次</code>），主题方向（项目疑难杂症，工作流，技术方案等等），分享资料归档并上传语雀，成员分享培训评价管理，汇总归档；</p><p>小组双周会，成员两周工作情况互通，遇到的问题，需要协助解决的事项，输出待解决事项清单（提出人，内容类别，内容详情，解决时间，解决人），上传归档及跟进解决，双周会不要求会议纪要，但是要有 <code>成员问题跟进表</code>。</p><h3 id="_3-管理人员" tabindex="-1">3. 管理人员 <a class="header-anchor" href="#_3-管理人员" aria-label="Permalink to &quot;3. 管理人员&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>部门计划将人员调配的权限，逐步下放到专业组负责人手里，后面组织结构的响应公司战略部署部门做动态调整，拉通专业组和项目组的高效协同，使小组管理者对成员工作有直观的洞察（能力/态度），建立 T 型管理梯队。</p></div>',9)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[34]||(d[34]=o(" 💡")),d[35]||(d[35]=e("p",null,"要做到人员的有效调动，第一，对成员能力和项目匹配度有认知和判定；第二，能识别项目计划制定专业计划，避免人员空闲稀释成本和能效；第三，把控项目上专业人员的风险，有补台补位及预防措施，并确定末尾红线替换淘汰机制（比如任务完成度和输出要做到什么程度）若因为组人员调配，影响到项目组工作计划造成时间冲突的，需跟项目负责人和项目计划达成一致（计划识别和同步），有分歧上报部门调整优先级（尽量避免）。",-1))]),_:1,__:[34,35]}),d[56]||(d[56]=t('<br><h5 id="🦴-输入-16" tabindex="-1">🦴 输入 <a class="header-anchor" href="#🦴-输入-16" aria-label="Permalink to &quot;🦴 输入&quot;">​</a></h5><p>人员的调动依据一定是项目计划和调动事件源，根据项目计划调动的人员安排，需上报部门记录和确认，同时，要去识别人员空闲率。避免忙的忙死，闲的闲死，后续根据职级跟指标相挂钩。</p><h5 id="🎗️-输出-11" tabindex="-1">🎗️ 输出 <a class="header-anchor" href="#🎗️-输出-11" aria-label="Permalink to &quot;🎗️ 输出&quot;">​</a></h5><blockquote><p><code>08-项目人员配置表</code> | <code>09-资源日历表</code></p></blockquote><h3 id="_4-培养和晋升" tabindex="-1">4. 培养和晋升 <a class="header-anchor" href="#_4-培养和晋升" aria-label="Permalink to &quot;4. 培养和晋升&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">场景：👀</p><p>每个人的认知，能力，经历，沟通力，理解力，学习力都不一样，我们的管理者，如何把这些基于点的优点，树立榜样，作为标品和基线，提升和补缺典型的缺点，并且在这个过程中，为组织产出和留存，可识别的，直观的，有价值的沉淀，思考，和创新。比如一个产品，方案编写和演讲的能力，就是一个典型，如何去培养典型的能力。</p></div>',7)),l(c,{shadow:"hover"},{default:n(()=>[l(a,{text:"解释"}),d[36]||(d[36]=o(" 💡")),d[37]||(d[37]=e("p",null,"回归职场，职业发展的路径，公司团队发展的需要，内建都是核心，练武不练功，到头一场空，培养和晋升是相辅相成的，通俗直白一点说，你要晋升，就培养出来一个人来可以替代你现有，要把价值显性化，实例化，具象化，这才是管理的价值，赋能使能。",-1))]),_:1,__:[36,37]}),d[57]||(d[57]=e("p",null,"小组成员能力培养，要定指标，定要求，有培养计划和课题，结果可验证，如业务域，演讲能力，方案能力，需求管理能力等等，用输出沉淀和结果说话（也会作为晋升依据）；专业管理人员，需跟成员明确梯队匹配分级，未来我们配合人力资源把人员职级细化，明确晋升路径。",-1)),d[58]||(d[58]=e("h2",{id:"core",tabindex:"-1"},[o("Core "),e("a",{class:"header-anchor",href:"#core","aria-label":'Permalink to "Core"'},"​")],-1)),d[59]||(d[59]=e("div",{class:"tip custom-block"},[e("p",{class:"custom-block-title"},"TIP"),e("p",null,"对于一个合格且优秀的组长，一定要是制度流程的坚定拥护者和执行者，上传下达，上行下效，尽力尽心尽责的做好职能管理，树立好的标杆典型，杜绝劣币淘汰良币的情况发生，所以在这个过程中，就要做好检查，有效监督，积极纠偏，努力去做提升。把事、人、情分开来看。我们的组长，不但要对项目的输入输出有哪些洞若观火，还应该对输入输出到什么程度了如指掌，再好的制度、流程、规范，没有检查监督，纠偏和优化，最后就会不了了之流于形式。管理角色需要提升自己的认知，打败自己心理的矫情和软弱，规避本位主义的趋利避害，才是迈向管理角色坚实的一步，应该用更健康的心态去看待和开展管理工作，最终的目的，都是为了精益赋能，降低沟通和试错成本，而不是为管理而管理。")],-1))])}const v=s(h,[["render",b]]);export{x as __pageData,v as default};
