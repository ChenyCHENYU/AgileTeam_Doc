/**
 * name: agile-team-doc
 * version: v2.1.0
 * description: 敏捷团队构建的线上文档，希望同时帮助到团队伙伴和社区的大家
 * author: CHENY <ycyplus@gmail.com>
 * homepage: undefined
 */
import{_ as r,C as t,c as p,o as d,aQ as i,G as s,j as n,w as h}from"./chunks/framework.BjhQmtN6.js";const f=JSON.parse('{"title":"代码编辑器","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"web/coding-specification/codeing-tool.md","filePath":"web/coding-specification/codeing-tool.md","lastUpdated":1732265191000}'),c={name:"web/coding-specification/codeing-tool.md"};function k(u,e,g,m,E,b){const a=t("ElImg"),l=t("GitalkComment"),o=t("ClientOnly");return d(),p("div",null,[e[0]||(e[0]=i('<h1 id="代码编辑器" tabindex="-1">代码编辑器 <a class="header-anchor" href="#代码编辑器" aria-label="Permalink to &quot;代码编辑器&quot;">​</a></h1><p><strong>工欲善其事，必先利其器</strong> 🔧<br> 要问现在前端工程师用的最多的代码编辑器是哪个，肯定是 <strong>Visual Studio Code</strong> 了！</p><h2 id="为什么用-vscode" tabindex="-1">为什么用 vscode ？ <a class="header-anchor" href="#为什么用-vscode" aria-label="Permalink to &quot;为什么用 vscode ？&quot;">​</a></h2><blockquote><p>微软背书，生态健壮，功能强大，性能优秀，大量实用的插件集，工具流，高弹性配置，规则定制化，轻巧便捷，Sync 绑定 Hub，团队协作开发配置统一化、规范化，满足前端主流开发，Vue、React、Angular 三大框架，小程序、混合开发、sass、stylus 预处理等等。</p></blockquote><div class="info custom-block"><p class="custom-block-title">与其他的编辑器相比，它的优点如此突出：</p><p>- 背靠 Microsoft ，完全免费并且开源，开箱即用；<br> - 可以通过简单的配置调整来满足之前在其他编辑器上的习惯(e.g. Sublime Text)；<br> - 轻量级但功能强大，内置了对 JavaScript、TypeScript 和 Node.js 的支持；<br> - 丰富的插件生态，可以根据的需要，安装提高编码效率的功能支持，以及其他的语言扩展；<br> - 智能的代码补全、类型推导、代码检查提示、批量编辑、引用跳转、比对文件等功能支持；<br> - 登录的 GitHub 账号即可实现配置自动同步，在其他电脑上直接使用的最习惯配置和插件。</p></div><p>当然，还有非常多优点，在使用中慢慢徜徉...ba！</p><h2 id="安装-vscode" tabindex="-1">安装 VSCode <a class="header-anchor" href="#安装-vscode" aria-label="Permalink to &quot;安装 VSCode&quot;">​</a></h2><p>点击下载：<a href="https://code.visualstudio.com/Download" target="_blank" rel="noreferrer">Visual Studio Code</a></p><p>一般情况下开箱即用，无门槛，也可以阅读官方文档了解一些个性化的配置。</p><p>点击查看：<a href="https://code.visualstudio.com/docs" target="_blank" rel="noreferrer">操作文档</a></p><h2 id="团队初始化配置" tabindex="-1">团队初始化配置 <a class="header-anchor" href="#团队初始化配置" aria-label="Permalink to &quot;团队初始化配置&quot;">​</a></h2><ol><li>安装插件 Setting Sync <a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync" target="_blank" rel="noreferrer">VsCode Plugin Setting Sync</a>。</li></ol>',12)),s(a,{src:"img/settingsync.png",title:"vscode, Setting Sync"}),e[1]||(e[1]=n("ol",{start:"2"},[n("li",null,"Ctrl + Shift + P 输入 sync 后，按如下步骤进行操作。")],-1)),s(a,{src:"img/sync-select-options.png",title:"vscode, Sync Selct Options"}),s(a,{src:"img/sync-download-option.png",title:"vscode, Sync Download Option"}),s(a,{src:"img/sync-open-setting.png",title:"vscode, Syncopen Setting"}),s(a,{src:"img/sync-gist.png",title:"vscode, Sync Gist Enter"}),e[2]||(e[2]=i('<ol start="3"><li>复制 Gist ID 到 Settings Sync 设置界面，View 输入后选择下载配置。</li></ol><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>424f89d2da9867691769448e5b1bf657</span></span></code></pre></div><ul><li>在插件检索区域输入 @installed 查看安装的插件集。</li><li>进入项目，编写部分代码，进行格式化，测试一下效果。</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>若同步插件集失败，请注意是否为科学上网，请耐心多次尝试哦。</p></div><h2 id="插件集掠影" tabindex="-1">插件集掠影 <a class="header-anchor" href="#插件集掠影" aria-label="Permalink to &quot;插件集掠影&quot;">​</a></h2>',5)),s(a,{src:"img/plugins.png",title:"vscode, plugins"}),e[3]||(e[3]=i(`<h2 id="简单介绍集成的插件" tabindex="-1">简单介绍集成的插件 <a class="header-anchor" href="#简单介绍集成的插件" aria-label="Permalink to &quot;简单介绍集成的插件&quot;">​</a></h2><p>VSCode 本身是轻量级的，也就是只提供最基础的功能，更优秀的体验或者个性化体验，是需要通过插件来启用的。</p><p>这里介绍几个非常舒服的 VSCode 插件，可以通过插件中心安装，也可以通过官方应用市场下载，<strong>如果团队使用，建议使用集成我配置好的插件集</strong>，你只需要同步 <a href="#团队初始化配置">团队初始化配置</a>。</p><h3 id="chinese-simplified" tabindex="-1">Chinese (Simplified) <a class="header-anchor" href="#chinese-simplified" aria-label="Permalink to &quot;Chinese (Simplified)&quot;">​</a></h3><p>VSCode 安装后默认是英文本，需要自己进行汉化配置， VSCode 的特色就是插件化处理各种功能，语言方面也一样。</p><p>安装该插件并启用，即可让 VSCode 显示为简体中文。</p><p>点击下载：<a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans" target="_blank" rel="noreferrer">Chinese (Simplified)</a></p><h3 id="volar" tabindex="-1">Volar <a class="header-anchor" href="#volar" aria-label="Permalink to &quot;Volar&quot;">​</a></h3><p>Vue 官方推荐的 VSCode 扩展，用以代替 Vue 2 时代的 Vetur ，提供了 Vue 3 的语言支持、 TypeScript 支持、基于 <a href="https://github.com/johnsoncodehk/volar/tree/master/packages/vue-tsc" target="_blank" rel="noreferrer">vue-tsc</a> 的类型检查等功能。</p><p>点击下载：<a href="https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.volar" target="_blank" rel="noreferrer">Volar</a></p><h3 id="vue-vscode-snippets" tabindex="-1">Vue VSCode Snippets <a class="header-anchor" href="#vue-vscode-snippets" aria-label="Permalink to &quot;Vue VSCode Snippets&quot;">​</a></h3><p>从实际使用 Vue 的角度提供 Vue 代码片段的生成，可以通过简单的命令，在 .vue 文件里实现大篇幅的代码片段生成，最新版本已基于 Volar 构建。</p><p>e.g.</p><ol><li><p>输入 <code>ts</code> 可以快速创建一个包含了 <code>template</code> + <code>script</code> + <code>style</code> 的 Vue 模板（可选 2.x 、3.x 以及 class 风格的模板）</p></li><li><p>也可以通过输入带有 <code>v3</code> 开头的指令来快速生成 Vue 3 的 API 。</p></li></ol><p>下面是输入了 <code>ts</code> 两个字母之后，用箭头选择 <code>vbase-3-ts</code> 自动生成的一个模板片段，在开发过程中非常省事：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineComponent } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scoped</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>点击下载：<a href="https://marketplace.visualstudio.com/items?itemName=sdras.vue-vscode-snippets" target="_blank" rel="noreferrer">Vue VSCode Snippets</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>为啥要推荐这个 <code>vue-vscode-snippets</code>，而不是 <code>Vue3snippets</code>，原因可以看之前记录的一段揪心的经历：</p><p><a href="https://cheny.com/article/vue-vscode-snippets.html" target="_blank" rel="noreferrer">解决 vscode 保存 vue 文件时 压缩 stylus 代码为一行以及无法注释 template 的问题</a></p></div><h3 id="auto-close-tag" tabindex="-1">Auto Close Tag <a class="header-anchor" href="#auto-close-tag" aria-label="Permalink to &quot;Auto Close Tag&quot;">​</a></h3><p>可以快速帮完成 HTML 标签的闭合，除非熟悉 <code>jsx</code> / <code>tsx</code>，否则在写 <code>template</code> 的时候肯定用得上。</p><p>点击下载：<a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag" target="_blank" rel="noreferrer">Auto Close Tag</a></p><h3 id="auto-rename-tag" tabindex="-1">Auto Rename Tag <a class="header-anchor" href="#auto-rename-tag" aria-label="Permalink to &quot;Auto Rename Tag&quot;">​</a></h3><p>假如要把 <code>div</code> 修改为 <code>section</code>，不需要再把 <code>&lt;div&gt;</code> 然后找到代码尾部的 <code>&lt;/div&gt;</code> 才能修改，只需要选中前面的半个标签，直接修改，插件会自动帮把闭合部分也同步修改，对于篇幅比较长的代码调整非常有帮助。</p><p>点击下载：<a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag" target="_blank" rel="noreferrer">Auto Rename Tag</a></p><h3 id="vscode-prettier" tabindex="-1">VSCode Prettier <a class="header-anchor" href="#vscode-prettier" aria-label="Permalink to &quot;VSCode Prettier&quot;">​</a></h3><p>这是 <a href="#prettier">Prettier</a> 在 VSCode 的一个扩展，不论的项目有没有安装 Pretter 依赖，安装该扩展之后，单纯在 VSCode 也可以使用 Pretter 来进行代码格式化。</p><p>点击下载：<a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="noreferrer">Prettier - Code formatter</a></p><p>点击访问：<a href="https://prettier.io/" target="_blank" rel="noreferrer">Prettier 官网</a> 了解更多配置。</p><h3 id="vscode-eslint" tabindex="-1">VSCode ESLint <a class="header-anchor" href="#vscode-eslint" aria-label="Permalink to &quot;VSCode ESLint&quot;">​</a></h3><p>这是 <a href="#eslint">ESLint</a> 在 VSCode 的一个扩展， TypeScript 项目基本都开了 ESLint ，编辑器也建议安装该扩展支持。</p><p>点击下载：<a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noreferrer">VSCode ESLint</a></p><p>点击访问：<a href="https://eslint.org/" target="_blank" rel="noreferrer">ESLint 官网</a> 了解更多配置。</p><h3 id="其他插件" tabindex="-1">其他插件 <a class="header-anchor" href="#其他插件" aria-label="Permalink to &quot;其他插件&quot;">​</a></h3><p>更多插件根据个性化需要，自行了解下载，等我后面有时间了更新下安装的插件集使用。</p>`,34)),s(o,null,{default:h(()=>[s(l,{issueId:11})]),_:1})])}const y=r(c,[["render",k]]);export{f as __pageData,y as default};
