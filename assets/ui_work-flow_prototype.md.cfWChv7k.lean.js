/**
 * name: agile-team-doc
 * version: v2.1.0
 * description: 敏捷团队构建的线上文档，希望同时帮助到团队伙伴和社区的大家
 * author: CHENY <ycyplus@gmail.com>
 * homepage: https://github.com/ChenyCHENYU/AgileTeam_Doc
 */
import{_ as i,C as l,c as s,o as n,j as o,G as t,aQ as d,a,w as p}from"./chunks/framework.BjhQmtN6.js";const P=JSON.parse('{"title":"原型设计","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"ui/work-flow/prototype.md","filePath":"ui/work-flow/prototype.md","lastUpdated":1721982122000}'),h={name:"ui/work-flow/prototype.md"},u={class:"tip custom-block"},m={class:"tip custom-block"};function b(f,e,k,q,w,x){const r=l("ElImg"),c=l("ElCard");return n(),s("div",null,[e[5]||(e[5]=o("h1",{id:"原型设计",tabindex:"-1"},[a("原型设计 "),o("a",{class:"header-anchor",href:"#原型设计","aria-label":'Permalink to "原型设计"'},"​")],-1)),e[6]||(e[6]=o("blockquote",null,[o("p",null,[a("原型设计的主要作用，是"),o("code",null,"设计师"),a("与 "),o("code",null,"PM"),a("、"),o("code",null,"网站开发工程师"),a("沟通最初的产品设想的重要工具，展示产品内容和结构及粗略的布局，说明用户将如何与产品进行交互，而不是视觉设计。")])],-1)),t(r,{src:"ui/37.png"}),e[7]||(e[7]=d('<p>在大厂中，职位分工更为细致明确，大多原型都是由<code>产品经理</code>制作的，而中小企业里，更多的是<code>设计师</code>也要具备制作原型的能力。<strong>原型图阶段中设计师需要和产品经理沟通需求</strong>，并不是产品经理向设计师下发需求，而是需要相互就自己擅长的方面进行沟通。</p><h2 id="原型类型区别" tabindex="-1">原型类型区别 <a class="header-anchor" href="#原型类型区别" aria-label="Permalink to &quot;原型类型区别&quot;">​</a></h2><p>设计时原型的类别也需要关注，每个项目启动时对原型的需求不一定都相同，交流的对象也有可能会对原型的类别产生混淆，以为<code>线框图（Wireframe）</code>、<code>原型（Prototype）</code>和<code>视觉稿（Mockup）</code>是一个东西，设计开始前最好先与产品经理/甲方确认要绘制什么类型的原型。</p>',3)),t(r,{src:"ui/38.png"}),e[8]||(e[8]=d('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>三种类别虽然产出效果不同，但在本质上都是一样的，为设计开发服务，所以在产品研发时，并没有硬性规定一定先产出哪一个类别的原型图，一切以实际研发过程中的要求为准。</strong></p></div><h2 id="交互设计原则" tabindex="-1">交互设计原则 <a class="header-anchor" href="#交互设计原则" aria-label="Permalink to &quot;交互设计原则&quot;">​</a></h2><p>交互设计作为原型设计里的重要环节，了解交互设计原则，给交互设计提供更多设计支持。</p><h3 id="fitts-law-菲茨定律-费茨法则" tabindex="-1">Fitts’ Law / 菲茨定律（费茨法则） <a class="header-anchor" href="#fitts-law-菲茨定律-费茨法则" aria-label="Permalink to &quot;Fitts’ Law / 菲茨定律（费茨法则）&quot;">​</a></h3><p>目标离的越远，到达就越是费劲。目标越小，就越难点中。如果我们要想鼠标比较快速地命中目标可以采取两个措施，要么减少鼠标与目标之间的距离，要么使目标足够大。</p><h3 id="hick-s-law-席克定律-希克法则" tabindex="-1">Hick’s Law / 席克定律（希克法则） <a class="header-anchor" href="#hick-s-law-席克定律-希克法则" aria-label="Permalink to &quot;Hick’s Law / 席克定律（希克法则）&quot;">​</a></h3><p>一个人面临的选择越多，所需要作出决定的时间就越长。在人机交互中界面中选项越多，意味着用户做出决定的时间越长。</p><h3 id="神奇数字-7±2-法则" tabindex="-1">神奇数字 7±2 法则 <a class="header-anchor" href="#神奇数字-7±2-法则" aria-label="Permalink to &quot;神奇数字 7±2 法则&quot;">​</a></h3><p>人类头脑最好的状态能记忆含有 7（±2）项信息块，在记忆了 5-9 项信息后就开始出错。与席克定律类似，神奇数字 7±2 法则也经常被应用在移动应用交互设计上，如应用的选项卡不会超过 5 个。</p><h3 id="the-law-of-proximity-接近法则" tabindex="-1">The Law Of Proximity 接近法则 <a class="header-anchor" href="#the-law-of-proximity-接近法则" aria-label="Permalink to &quot;The Law Of Proximity 接近法则&quot;">​</a></h3><p>根据格式塔（Gestalt）心理学：当对象离得太近的时候，意识会认为它们是相关的。在交互设计中表现为一个提交按钮会紧挨着一个文本框，因此当相互靠近的功能块是不相关的话，就说明交互设计可能是有问题的。</p><h3 id="tesler-s-law-泰思勒定律-复杂性守恒定律" tabindex="-1">Tesler’s Law 泰思勒定律（复杂性守恒定律） <a class="header-anchor" href="#tesler-s-law-泰思勒定律-复杂性守恒定律" aria-label="Permalink to &quot;Tesler’s Law 泰思勒定律（复杂性守恒定律）&quot;">​</a></h3><p>该定律认为每一个过程都有其固有的复杂性，存在一个临界点，超过了这个点过程就不能再简化了，你只能将固有的复杂性从一个地方移动到另外一个地方。如对于邮箱的设计，收件人地址是不能再简化的，而对于发件人却可以通过客户端的集成来转移它的复杂性。</p><h3 id="新乡重夫-防错原则" tabindex="-1">新乡重夫：防错原则 <a class="header-anchor" href="#新乡重夫-防错原则" aria-label="Permalink to &quot;新乡重夫：防错原则&quot;">​</a></h3><p>防错原则认为大部分的意外都是由设计的疏忽，而不是人为操作疏忽。通过改变设计可以把过失降到最低。该原则最初是用于工业管理的，如在硬件设计上的 USB 插槽。而在界面交互设计中也是可以经常看到，如当使用条件没有满足时，常常通过使功能失效来表示（一般按钮会变为灰色无法点击），以避免误按。</p><h3 id="occam-s-razor-奥卡姆剃刀原理-简单有效原理" tabindex="-1">Occam’s Razor 奥卡姆剃刀原理（简单有效原理） <a class="header-anchor" href="#occam-s-razor-奥卡姆剃刀原理-简单有效原理" aria-label="Permalink to &quot;Occam’s Razor 奥卡姆剃刀原理（简单有效原理）&quot;">​</a></h3><p>这个原理被称为「如无必要，勿增实体」，即如有两个功能相等的设计，那么选择最简单的。</p><h3 id="steering-law-转向定律" tabindex="-1">Steering Law 转向定律 <a class="header-anchor" href="#steering-law-转向定律" aria-label="Permalink to &quot;Steering Law 转向定律&quot;">​</a></h3><h4 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h4>',19)),t(c,{shadow:"hover"},{default:p(()=>e[0]||(e[0]=[o("p",null,[o("strong",null,"触控技术（Touch）应用：")],-1),o("p",null,[o("code",null,"0°"),a(" 方向是最利于操作者移动的方向，具有较好的视觉反馈，成功率相对最高；"),o("br"),o("code",null,"120°"),a(" 方向用户在操作时最为困难，在用户界面交互设计中应尽少使用；"),o("br"),a(" 用户手指在各个方向的运动中，宽度低于 "),o("code",null,"14"),a(" 像素的"),o("code",null,"Touch"),a("是用户体验最差的。")],-1)])),_:1,__:[0]}),e[9]||(e[9]=d('<h3 id="帕累托定律-80-20-原则" tabindex="-1">帕累托定律（80/20 原则） <a class="header-anchor" href="#帕累托定律-80-20-原则" aria-label="Permalink to &quot;帕累托定律（80/20 原则）&quot;">​</a></h3><p>任何大系统中，大部分的效果仅有少数几项变量决定。用户 <code>80%</code> 的时间花在了 <code>20%</code> 的功能上。</p><div class="warning custom-block"><p class="custom-block-title">🔔</p><p>其实交互定律看起来有点枯燥，生搬硬套其实并不一定能套上去，列举以上的设计原则更多的是为设计做参考，结合设计原则，是提升设计说服力的有效方法。</p></div><h2 id="完整的原型图" tabindex="-1">完整的原型图 <a class="header-anchor" href="#完整的原型图" aria-label="Permalink to &quot;完整的原型图&quot;">​</a></h2><p>一套完整且专业的原型图，除了按照需求文档设计出<code>所有页面</code>，<code>串联页面</code>以外，还包括一些让人容易疏忽的地方，因为原型图所交付的并不只有需求方，还有设计师与开发人员。</p><h3 id="原型图标注-画开发看得懂的图" tabindex="-1">原型图标注，画开发看得懂的图 <a class="header-anchor" href="#原型图标注-画开发看得懂的图" aria-label="Permalink to &quot;原型图标注，画开发看得懂的图&quot;">​</a></h3><p>原型图对于<code>设计师</code>来说，是为了查看产品<code>功能页面</code>与<code>逻辑路径</code>。对于开发人员来说，除了<code>产品框架</code>搭建，他们最关心的内容是产品使用中的<code>边界条件</code>、<code>页面跳转</code>关系。原型设计时需要画出功能的所有<code>交互状态</code>，因此原型图标注包括：定义好每个<code>标注点</code>的<code>含义</code>和<code>事件</code>，梳理<code>所有对象</code>和<code>逻辑关系</code>，<code>状态</code>、模块化区分和标记。</p><div class="tip custom-block"><p class="custom-block-title">👀 定义好每个标注点的含义和事件</p><p>在做交互稿标记之前，定义规范好每个标记的含义，形成统一的规范，使得团队成员易于理解。如，用水滴表示标注的功能，用圆圈 + 箭头的形式来标识页面跳转关系。</p></div>',8)),t(r,{src:"ui/39.png"}),o("div",u,[e[1]||(e[1]=o("p",{class:"custom-block-title"},"👀 梳理所有对象和逻辑关系、状态",-1)),e[2]||(e[2]=o("p",null,"下面的原型图标注以饿了么商家详情页结算订单为例，先用思维脑图梳理功能状态，这样能避免遗漏一些边界条件。",-1)),t(r,{src:"ui/40.png"})]),o("div",m,[e[3]||(e[3]=o("p",{class:"custom-block-title"},"👀 模块化区分和标记",-1)),e[4]||(e[4]=o("p",null,"梳理好状态后再在原型图上写产品用例，每个功能做成一个模块，有利于往后的维护和迭代。",-1)),t(r,{src:"ui/41.png"})]),e[10]||(e[10]=o("h3",{id:"在同一个页面展示所有的交互状态",tabindex:"-1"},[a("在同一个页面展示所有的交互状态 "),o("a",{class:"header-anchor",href:"#在同一个页面展示所有的交互状态","aria-label":'Permalink to "在同一个页面展示所有的交互状态"'},"​")],-1)),e[11]||(e[11]=o("p",null,"当项目开始一段时间后，原型里的标注会逐渐变多，很多的开发和设计，没有耐心看原型图上的各种标注，所以尽量能一个页面上显示出所有的交互状态，避免设计与开发时看漏。",-1)),t(r,{src:"ui/42.png"}),e[12]||(e[12]=d('<h3 id="流程图-梳理业务逻辑关系" tabindex="-1">流程图，梳理业务逻辑关系 <a class="header-anchor" href="#流程图-梳理业务逻辑关系" aria-label="Permalink to &quot;流程图，梳理业务逻辑关系&quot;">​</a></h3><p>用<code>流程图</code>梳理产品业务的<code>逻辑关系</code>，常用的流程图分为<code>单向流程图</code>和<code>泳道图</code>（涉及到多个角色）。</p><p>单向流程图一般描述单一角色完成某个任务的整体过程，如<code>登录注册过程</code>、<code>支付流程</code>、<code>填写资料</code>等。</p><div class="tip custom-block"><p class="custom-block-title">👀 绘制流程图需要注意以下几点：</p><p>1.确保产品流程的合理性； 2.有效传达需求； 3.检验异常分支。</p></div>',4)),t(r,{src:"ui/43.png"}),e[13]||(e[13]=d('<p>以上简单的梳理了一下日常工作设计原型图中容易让人忽略的内容。</p><h3 id="关于原型工具" tabindex="-1">关于原型工具 <a class="header-anchor" href="#关于原型工具" aria-label="Permalink to &quot;关于原型工具&quot;">​</a></h3><h4 id="axure" tabindex="-1"><a href="http://www.axure.com/" target="_blank" rel="noreferrer">Axure</a> <a class="header-anchor" href="#axure" aria-label="Permalink to &quot;[Axure](http://www.axure.com/)&quot;">​</a></h4><blockquote><p>很有名的原型设计工具，也算是日常工作中最常用的原型工具，成名很早，很多设计师、产品经理都有用它。它除了能够高效率制作<code>产品原型</code>，快速<code>绘制线框图</code>、<code>流程图</code>、<code>网站架构图</code>、<code>示意图</code>、HTML 模板外，还支持 <code>javascript</code> 交互的实现，并生成 <code>Web</code> 格式上传到 <code>Axure share</code> 分享浏览。</p></blockquote>',4)),t(r,{src:"ui/44.png"}),e[14]||(e[14]=d('<p>当然，目前市面上有很多种原型工具，例如<code>墨刀</code>、<code>摩客</code>、<code>ProtoPie</code> 等，都适合用于原型交互设计。当然选择哪个工具要看你自己，你的需求是什么，最适合自己工作流程的工具是哪种，有没有电脑系统的要求等等。</p><h3 id="推荐设计应用-figma" tabindex="-1">推荐设计应用 <a href="https://www.figma.com/" target="_blank" rel="noreferrer">Figma</a> <a class="header-anchor" href="#推荐设计应用-figma" aria-label="Permalink to &quot;推荐设计应用 [Figma](https://www.figma.com/)&quot;">​</a></h3><p><code>Figma</code> 是一个完全免费的在线设计软件，支持 <code>Windows</code> 和 <code>macOS</code> 等多个平台，是可以让整个团队的成员同时查看并修改协作的平台。使用过 <code>Sketch</code> 后，上手 <code>Figma</code> 几乎没有难度。</p>',3)),t(r,{src:"ui/45.png"}),e[15]||(e[15]=d('<h4 id="原型设计-1" tabindex="-1">原型设计 <a class="header-anchor" href="#原型设计-1" aria-label="Permalink to &quot;原型设计&quot;">​</a></h4><p>在 <code>figma</code> 里面，你可以无缝完成从设计到原型演示的切换，不需要反复同步设计图到第三方平台，并且可以利用 <code>Figma Mirror</code> 在手机上预览效果。单击播放图标将进入演示模式，可以在其中实时查看已完成的原型。</p><h4 id="实时协作-内置评论" tabindex="-1">实时协作+内置评论 <a class="header-anchor" href="#实时协作-内置评论" aria-label="Permalink to &quot;实时协作+内置评论&quot;">​</a></h4><p>在 <code>Figma</code> 里，设计和协作可以是同时进行的，任何人都可以在设计图的任何地方添加评论，你可以在评论中@其他人或将评论标记为已解决。</p>',4))])}const v=i(h,[["render",b]]);export{P as __pageData,v as default};
