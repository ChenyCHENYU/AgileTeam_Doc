import{I as r,c as E,o as g,af as l,J as a,j as i,w as n,a as t,t as o}from"./chunks/framework.hRqtpD5c.js";const b=JSON.parse('{"title":"了解前端工程化","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/document/web/get-familiar-quickly/engineering.md","filePath":"docs/document/web/get-familiar-quickly/engineering.md"}'),y={name:"docs/document/web/get-familiar-quickly/engineering.md"},A=Object.assign(y,{setup(c){const d="process.env.NODE_ENV";return(F,s)=>{const e=r("ImgWrap"),p=r("ClientOnly"),h=r("ElTag"),k=r("ElCard");return g(),E("div",null,[s[14]||(s[14]=l("",75)),a(p,null,{default:n(()=>[a(e,{src:"/logo.png",alt:"Vue.js Logo",maxWidth:240})]),_:1}),s[15]||(s[15]=l("",47)),a(h,{type:"success"},{default:n(()=>s[0]||(s[0]=[t("首屏加载速度快",-1)])),_:1,__:[0]}),s[16]||(s[16]=i("p",null,"因为 MPA 的页面源码都是实实在在的写在 HTML 文件里，所以当 HTML 文件被访问成功，内容也就随即呈现（在不考虑额外的 CSS 、 图片加载速度的情况下，这种模式的内容呈现速度是最快的）。",-1)),a(h,{type:"success"},{default:n(()=>s[1]||(s[1]=[t("SEO 友好，容易被搜索引擎收录",-1)])),_:1,__:[1]}),s[17]||(s[17]=l("",2)),a(h,{type:"success"},{default:n(()=>s[2]||(s[2]=[t("容易与服务端语言结合",-1)])),_:1,__:[2]}),s[18]||(s[18]=i("p",null,"由于传统的页面都是由服务端直出，所以可以使用 PHP 、 JSP 、 ASP 、 Python 等非前端语言或技术栈来编写页面模板，最终输出 HTML 页面到浏览器访问。",-1)),s[19]||(s[19]=i("h5",{id:"mpa-的缺点",tabindex:"-1"},[t("MPA 的缺点 "),i("a",{class:"header-anchor",href:"#mpa-的缺点","aria-label":"Permalink to “MPA 的缺点”"},"​")],-1)),s[20]||(s[20]=i("p",null,"说完 MPA 的优点，再来看看它的缺点，正因为有这些缺点的存在，才会催生出其他更优秀的开发模式出现。",-1)),a(h,{type:"danger"},{default:n(()=>s[3]||(s[3]=[t("页面之间的跳转访问速度慢",-1)])),_:1,__:[3]}),s[21]||(s[21]=i("p",null,"正如它的访问流程，每一次页面访问都需要完整的经历一次渲染过程，哪怕从详情页 A 的 “相关阅读” 跳转到详情页 B ，这种网页结构一样，只有内容不同的两个页面，也需要经历这样的过程。",-1)),a(h,{type:"danger"},{default:n(()=>s[4]||(s[4]=[t("用户体验不够友好",-1)])),_:1,__:[4]}),s[22]||(s[22]=i("p",null,"如果网页上的资源较多或者网速不好，这个过程就会有明显的卡顿或者布局错乱，影响用户体验。",-1)),a(h,{type:"danger"},{default:n(()=>s[5]||(s[5]=[t("开发成本高",-1)])),_:1,__:[5]}),s[23]||(s[23]=l("",15)),a(k,{shadow:"hover"},{default:n(()=>s[6]||(s[6]=[i("ul",null,[i("li",null,[i("p",null,"只有一次完全请求的等待时间（首屏加载）")]),i("li",null,[i("p",null,"用户体验好，内部跳转的时候可以实现 “无刷切换”")]),i("li",null,[i("p",null,"因为不需要重新请求整个页面，所以切换页面的时候速度更快")]),i("li",null,[i("p",null,"因为没有脱离当前页面，所以 “页” 与 “页” 之间在切换过程中支持动画效果")]),i("li",null,[i("p",null,"脱离页面跳页面的框架，让整个网站形成一个 Web App ，更接近原生 App 的访问体验")]),i("li",null,[i("p",null,"开发效率高，前后端分离，后端负责 API 接口，前端负责界面和联调，同步进行周期短")])],-1)])),_:1,__:[6]}),s[24]||(s[24]=i("p",null,"这也是为什么短短几年时间， SPA 的体验模式成为前端领域的主流。",-1)),s[25]||(s[25]=i("h5",{id:"spa-的缺点",tabindex:"-1"},[t("SPA 的缺点 "),i("a",{class:"header-anchor",href:"#spa-的缺点","aria-label":"Permalink to “SPA 的缺点”"},"​")],-1)),s[26]||(s[26]=i("p",null,"虽然 SPA 应用在使用过程中的用户体验非常好，但也有自身的缺点存在：",-1)),a(h,{type:"danger"},{default:n(()=>s[7]||(s[7]=[t("首屏加载相对较慢",-1)])),_:1,__:[7]}),s[27]||(s[27]=i("p",null,"由于 SPA 应用的路由是由前端控制， SPA 在打开首页后，还要根据当前的路由再执行一次内容渲染，相对于 MPA 应用从服务端直出 HTML ，首屏渲染所花费的时间会更长。",-1)),a(h,{type:"danger"},{default:n(()=>s[8]||(s[8]=[t("不利于 SEO 优化",-1)])),_:1,__:[8]}),s[28]||(s[28]=i("p",null,[t("由于 SPA 应用全程是由 JavaScript 控制内容的渲染，因此唯一的一个 HTML 页面 "),i("code",null,"index.html"),t(' 通常是一个空的页面，只有最基础的 HTML 结构，不仅无法设置每个路由页面的 TDK ，页面内容也无法呈现在 HTML 代码里，因此对搜索引擎来说，网站的内容再丰富，依然只是一个 “空壳” ，"蜘蛛"无法让搜索引擎进行内容爬取。')],-1)),a(p,null,{default:n(()=>[a(e,{src:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/seo-spa-page-code.jpg",dark:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/seo-spa-page-code-dark.jpg",alt:"单页面应用的网页内容只有一个空的 HTML 结构"})]),_:1}),s[29]||(s[29]=l("",62)),a(k,{shadow:"hover"},{default:n(()=>s[9]||(s[9]=[i("ul",null,[i("li",null,"双平台的体验一致性"),i("li",null,"支持热更新，无需用户重新下载整个 App"),i("li",null,"内置的 WebView 也可以做到和系统交互，比如读取 / 存储照片、通讯录，获取定位等等"),i("li",null,"支持 App Push 系统通知推送"),i("li",null,"还有很多 Native App 具备的功能")],-1)])),_:1,__:[9]}),s[30]||(s[30]=l("",8)),a(p,null,{default:n(()=>[a(e,{src:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/screenshot-vscode.jpg",dark:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/screenshot-vscode-dark.jpg",alt:"Visual Studio Code 界面截图"})]),_:1}),a(p,null,{default:n(()=>[a(e,{src:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/screenshot-postman.jpg",dark:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/screenshot-postman-dark.jpg",alt:"Postman 界面截图"})]),_:1}),s[31]||(s[31]=l("",9)),a(p,null,{default:n(()=>[a(e,{src:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/screenshot-pkg.jpg",dark:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/screenshot-pkg-dark.jpg",alt:"使用 Pkg 构建后的程序运行截图"})]),_:1}),s[32]||(s[32]=l("",58)),a(p,null,{default:n(()=>[a(e,{src:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/bundler.png",alt:"Webpack 的工作原理（摘自 Vite 官网）"})]),_:1}),s[33]||(s[33]=i("p",null,"Vite 是基于浏览器原生的 ES Module ，所以不需要预先打包，而是直接启动开发服务器，请求到对应的模块的时候再进行编译，下面是 Vite 使用的 ESM 机制的工作流程。",-1)),a(p,null,{default:n(()=>[a(e,{src:"https://cheny-chenyu.oss-cn-chengdu.aliyuncs.com/my-agile-team-document/img/esm.png",alt:"Vite 的工作原理（摘自 Vite 官网）"})]),_:1}),s[34]||(s[34]=l("",9)),a(k,{shadow:"hover",style:{"margin-bottom":"16px"}},{default:n(()=>s[10]||(s[10]=[i("ul",null,[i("li",null,"可以使用 TypeScript 、 CSS 预处理器之类的需要编译的语言提高开发效率"),i("li",null,"代码不会压缩，并有 Source Mapping 源码映射，方便 BUG 调试"),i("li",null,"默认提供局域网服务，无需自己做本地部署"),i("li",null,"提供了热重载（ Hot Module Replacement ， 简称 HMR ），当修改了代码之后，无需重新运行或者刷新页面，构建工具会检测的修改自动帮更新"),i("li",null,"还有更多 …")],-1)])),_:1,__:[10]}),s[35]||(s[35]=i("h4",{id:"生产环境",tabindex:"-1"},[t("生产环境 "),i("a",{class:"header-anchor",href:"#生产环境","aria-label":"Permalink to “生产环境”"},"​")],-1)),s[36]||(s[36]=i("p",null,[t("在 "),i("a",{href:"./../get-familiar-quickly/typescript.html#hello-typescript"},"Hello TypeScript"),t(" demo 最后配置的一个 "),i("code",null,"npm run build"),t(" 命令，将 TypeScript 代码编译成了 JavaScript ，这个时候 dist 文件夹下的代码文件就处于 “生产环境” 了，因为之后不论源代码怎么修改，都不会直接影响到它们，直到再次执行 build 编译。")],-1)),s[37]||(s[37]=i("p",null,"生产环境和开发环境最大的区别就是稳定！除非再次打包发布，否则不会影响到已部署的代码。",-1)),a(k,{shadow:"hover"},{default:n(()=>s[11]||(s[11]=[i("ul",null,[i("li",null,[t("代码会编译为浏览器最兼容的版本，一些不兼容的新语法会进行 "),i("a",{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/Polyfill",target:"_blank",rel:"noreferrer"},"Polyfill")]),i("li",null,"稳定，除非重新发布，否则不会影响到已部署的代码"),i("li",null,"打包的时候代码会进行压缩混淆，缩小项目的体积，也降低源码被直接曝光的风险")],-1)])),_:1,__:[11]}),s[38]||(s[38]=i("p",null,null,-1)),s[39]||(s[39]=i("h4",{id:"环境判断",tabindex:"-1"},[t("环境判断 "),i("a",{class:"header-anchor",href:"#环境判断","aria-label":"Permalink to “环境判断”"},"​")],-1)),i("p",null,[s[12]||(s[12]=t("在 Webpack ，可以使用 ",-1)),i("code",null,o(d)),s[13]||(s[13]=t(" 来区分开发环境（ development ）还是生产环境（ production ），它会返回当前所处环境的名称。",-1))]),s[40]||(s[40]=l("",2))])}}});export{b as __pageData,A as default};
