import{_ as s,I as c,c as i,o as u,af as t,J as a,j as l,w as r,a as e}from"./chunks/framework.hRqtpD5c.js";const P=JSON.parse('{"title":"前言","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/document/ui/standard/introduction.md","filePath":"docs/document/ui/standard/introduction.md"}'),p={name:"docs/document/ui/standard/introduction.md"};function h(b,o,m,_,g,k){const d=c("ElImg"),n=c("ElCard");return u(),i("div",null,[o[4]||(o[4]=t('<h1 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to “前言”">​</a></h1><blockquote><p>建立合适的 UI 设计规范，对提升用户体验有很大帮助。这篇文档讲述了设计规范的定义和来由，并说明了在文字、色彩、阴影、圆角、布局、栅格、图标、文案和组件等方面的详细设计规范。</p></blockquote><h2 id="设计规范综述" tabindex="-1">设计规范综述 <a class="header-anchor" href="#设计规范综述" aria-label="Permalink to “设计规范综述”">​</a></h2><h3 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to “定义”">​</a></h3><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>作为一个 <code>B端</code> 领域的项目和产品，为了应对公司快速迭代开拓市场和一部分购买者的定制化需求，与此同时还要保障产品间的用户体验一致性，近年来设计规范这一解决方案不断升温，如 <code>Salesforce</code>，<code>antdesign</code> 等纷纷推出了自己的设计规范。</p><p>那么到底什么是设计规范呢？和设计语言、设计原则、组件库等有什么关系呢？</p><p><strong>我认为的设计规范是以下的定义：<code>设计规范由设计原则</code>、<code>设计语言</code>和<code>组件库</code>构成，在设计原则的指导下使用设计语言和组件库创建体验一致的用户界面。</strong></p></div>',5)),a(d,{src:"ui/1.png"}),o[5]||(o[5]=l("p",null,"设计原则：即整个设计规范所要遵循的全局规则，为设计提供方向指导。以下给出几个例子：",-1)),a(d,{src:"ui/2.png"}),o[6]||(o[6]=t('<div class="tip custom-block"><p class="custom-block-title">👀 基本分类</p><blockquote><p>设计语言：包括色彩，文字、图标等。<br> 组件库：分为基础组件（按钮，下拉列表等）及业务组件（商品模块）。</p></blockquote></div><p>在做设计语言和组件库时，有一个基本原则是，少即是多(<code>less is more</code>)，用尽可能少的样式来实现设计目标，例如按钮提供三种尺寸即可，在适应不同场景需求的同时保证体验的 <strong><code>一致性</code></strong> ；<br> 另一方面，<strong><code>保持克制的设计规范</code></strong> 可以进一步减少设计师的决策时间，提高设计效率。</p><h2 id="理论基础-原子设计" tabindex="-1">理论基础 - “原子设计” <a class="header-anchor" href="#理论基础-原子设计" aria-label="Permalink to “理论基础 - “原子设计””">​</a></h2><h3 id="什么是原子设计" tabindex="-1">什么是原子设计？ <a class="header-anchor" href="#什么是原子设计" aria-label="Permalink to “什么是原子设计？”">​</a></h3><div class="tip custom-block"><p class="custom-block-title">👀</p><p>原子设计是构建设计规范的核心指导理论。2013 年，<strong><code>Brad</code></strong> 从化学中得到了灵感，创建了<code>原子设计理论</code>。在化学中，所有的物体都是由原子构成，原子构成分子，进而构成宇宙万物。对应到界面中，界面也是如此，所有的元素都是由<code>文字</code>、<code>颜色</code>等最基本的元素构成的。这些基本元素构成组件，<code>组件构成页面</code>。</p></div><p>原子设计概念的提出使得设计规范演变成为了一种更为高效、科学的设计规范，极大的改善了设计师与前端工程师的工作体验。</p><h3 id="原子设计系统的五个层次" tabindex="-1">原子设计系统的五个层次 <a class="header-anchor" href="#原子设计系统的五个层次" aria-label="Permalink to “原子设计系统的五个层次”">​</a></h3><h4 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to “”">​</a></h4>',8)),a(n,{shadow:"hover"},{default:r(()=>o[0]||(o[0]=[l("div",{class:"tip custom-block"},[l("p",{class:"custom-block-title"},"🔔 原子设计包含五个同时工作的阶段，以更慎重和更具层次的方式创建界面设计规范"),l("p",null,[l("strong",null,"原子"),e("：原子是构成界面的最小元素，例如"),l("code",null,"颜色"),e("、"),l("code",null,"文本"),e("、"),l("code",null,"图标"),e("、"),l("code",null,"线条"),e("。它们在在界面这个维度上不能再被细分。例如图标，本身是可以继续细分的，但是对于界面而言，图标细分得到的元素是没有任何意义的。")]),l("p",null,[l("strong",null,"分子"),e("：原子按照一定的规律组合就构成了分子，它们拥有独特的功能，例如"),l("code",null,"下拉列表"),e("，"),l("code",null,"步进器"),e("等。")]),l("p",null,[l("strong",null,"组织"),e("：在界面中组织体现为由分子原子组成的模块，例如数据概览的"),l("code",null,"卡片"),e("。")]),l("p",null,[l("strong",null,"模板"),e("：在界面中，"),l("code",null,"模板"),e("的体现是"),l("code",null,"原型图"),e("，是页面的基本形态，可以让我们快速试错，搭建出一个功能良好的整体。")]),l("p",null,[l("strong",null,"页面"),e("：在"),l("code",null,"模板"),e("的基础上将占位符更换为真实内容，并进行视觉优化即为"),l("code",null,"页面"),e("。")])],-1)])),_:1,__:[0]}),o[7]||(o[7]=t('<h2 id="为什么需要设计规范" tabindex="-1">为什么需要设计规范？ <a class="header-anchor" href="#为什么需要设计规范" aria-label="Permalink to “为什么需要设计规范？”">​</a></h2><h3 id="软件危机" tabindex="-1">软件危机 <a class="header-anchor" href="#软件危机" aria-label="Permalink to “软件危机”">​</a></h3><p>在讲述设计规范之前，我想先讲述一个互联网史上的真实事件 - <code>&quot;软件危机&quot;</code>。</p><p>19 世纪 80 年代，软件的复杂度进一步提升，大规模软件甚至会由由数百万行代码组成，有数以百计的程序员参与其中，抽象语言解放了程序员的生产力和想象力，人们可以像写文学小说一样随意发挥地去写代码。</p><p>摆在面前的问题是如何高效且可靠地维护与迭代如此庞大的软件。之后 <code>C++</code>、<code>Java</code> 等我们熟知的<code>面向对象</code>的编程语言诞生了。</p><p>面向对象这种模式有一个很重要的特征是<code>封装</code>。这就好比当你在写王者荣耀的代码时，小兵是出现频率较高的模块，你可以提前把王者荣耀里的一个小兵封装成一个代码块，当你需要用到它时，不必重新一行一行写，只需要把它整体调用即可。</p><p>纵观软件发展史，20 世纪 60 年代的第一次软件危机创造了“<code>模块</code>”概念；20 世纪 80 年代第二次软件危机引出了“<code>面向对象编程</code>”，创造了“<code>对象</code>”概念。</p><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p><code>模块</code>与<code>对象</code>本质上都是对<code>软件进行拆分与封装</code>，只是对象拆分的粒度更大，维度更高。这点与<code>原子设计</code>的原理不谋而合，从<code>色彩文字</code>等基础元素，到<code>按钮</code>、<code>选择器</code>等 <code>基础组件</code>、再到<code>典型模块</code>，也是对大型软件的设计元素不同粒度的拆分与封装。</p></div><h3 id="设计规范的优势" tabindex="-1">设计规范的优势 <a class="header-anchor" href="#设计规范的优势" aria-label="Permalink to “设计规范的优势”">​</a></h3>',9)),a(d,{src:"ui/3.png"}),a(n,{shadow:"hover"},{default:r(()=>o[1]||(o[1]=[l("p",null,[l("strong",null,"设计层面"),e("：解决用户体验一致性，减少设计成本，提高设计效率，使得设计师可以快速承接新需求。沉淀设计资产，使得设计更加持续地输出价值，减少一次性设计，同时使设计师从样式中解放出来，站在更高的层面上来思考业务与体验。")],-1),l("p",null,[l("strong",null,"开发层面"),e("：与设计规范同步形成研发资产，避免重复造轮子，保证代码质量，降低维护和拓展的成本。")],-1),l("p",null,[l("strong",null,"测试层面"),e("：避免重复的无意义走查。之前遇到过一个深色模式的需求，尽管只换了颜色，但是测试仍然把所有组件都测试了一遍，加上重复的设计、开发量，导致原本一个很简单的需求，居然花费了 12 人天的工作量。")],-1),l("p",null,[l("strong",null,"产品层面"),e("：提高产品迭代与优化效率，降低试错成本。")],-1),l("p",null,[l("strong",null,"协作层面"),e("：降低不同设计师之间以及设计师与开发工程师之间的沟通成本。")],-1)])),_:1,__:[1]}),o[8]||(o[8]=t('<h2 id="为什么要自己做设计规范" tabindex="-1">为什么要自己做设计规范？ <a class="header-anchor" href="#为什么要自己做设计规范" aria-label="Permalink to “为什么要自己做设计规范？”">​</a></h2><p>这个时候可以会有小伙伴问，目前市面上有这么多的第三方设计规范，例如 <code>antdesign</code>，<code>element</code>，有必要自己重复造轮子做一遍吗？答案是非常有必要。原因如下：</p><p>第一，<code>B</code> 端自身的业务性决定了市场上没有万能的设计规范，那些设计规范的组件并不能 <code>100%</code> 满足我们产品的需求。另外一方面<code>使用封装好的第三方设计规范，在此基础上进行修改，效率很低，适配的复杂度和重新开发相差无几</code>。</p><p>第二，大家都在使用第三方设计规范时，<code>产品的同质化</code>便不可避免。为了避免这种情况发生，我们必须要从设计语言开始，设计自己的规范。</p><div class="warning custom-block"><p class="custom-block-title">👀 那些大厂的成熟的组件库该如何用？把它当成一个字典，有不会的地方，参考人家的成熟的解决方案。</p></div><h2 id="设计规范的落地" tabindex="-1">设计规范的落地 <a class="header-anchor" href="#设计规范的落地" aria-label="Permalink to “设计规范的落地”">​</a></h2><h3 id="落不了地的原因" tabindex="-1">落不了地的原因？ <a class="header-anchor" href="#落不了地的原因" aria-label="Permalink to “落不了地的原因？”">​</a></h3>',7)),a(d,{src:"ui/4.png"}),a(n,{shadow:"hover"},{default:r(()=>o[2]||(o[2]=[l("p",null,[e("🤷‍♂️"),l("code",null,"设计层面")],-1),l("p",null,[e("• "),l("strong",null,"组件扩展性弱"),e("：有的设计师做出来的组件虽然看着很好，但是实际上使用时，适配效率很低，用组件去扩展和重新做的效率差不多。")],-1),l("p",null,[e("• "),l("strong",null,"脱离业务"),e("：大部分时候设计师手中都有任务，于是不花心思交作业，不了解融入业务，做出来的是空中楼阁，抛开业务谈设计规范的都是耍流氓。")],-1),l("p",null,[e("• "),l("strong",null,"缺乏开发思维"),e("：设计师不了解开发的实现方式，可能会做出来开发较难实现的组件。")],-1),l("p",null,[e("🤷‍♂️"),l("code",null,"开发层面")],-1),l("p",null,[e("• "),l("strong",null,"缺少开发资源"),e("：设计规范的作用是巨大而缓慢的，不能即时产出很大的价值。")],-1),l("p",null,[e("• "),l("strong",null,"另外一方面"),e("：设计规范的落地会增加开发工程师很多的工作量，且无法量化收益。这也导致很多时候无法争取到足够的开发资源来做这件事，导致达不到预期的效果。")],-1)])),_:1,__:[2]}),o[9]||(o[9]=l("h3",{id:"如何落地",tabindex:"-1"},[e("如何落地？ "),l("a",{class:"header-anchor",href:"#如何落地","aria-label":"Permalink to “如何落地？”"},"​")],-1)),o[10]||(o[10]=l("h4",{id:"-1",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#-1","aria-label":"Permalink to “”"},"​")],-1)),a(n,null,{default:r(()=>o[3]||(o[3]=[l("p",null,[e("🗝️"),l("code",null,"说完了落不了地的原因，那么如何落地呢？我认为要从以下四个方面来推进：")],-1),l("p",null,[l("strong",null,"Ⅰ."),e(" 写一份"),l("code",null,"设计规范的价值的提案"),e("给领导，争取到足够的开发资源。")],-1),l("p",null,[l("strong",null,"Ⅱ."),e(" 借鉴"),l("code",null,"敏捷开发"),e("的思想，小步迭代快速推进，将设计规范的覆盖放在每次迭代过程中。")],-1),l("p",null,[l("strong",null,"Ⅲ."),e(" 把设计规范的开发交给"),l("code",null,"熟悉业务的设计师"),e("来做，通过业务提炼复用率高的典型元素，优先开发，最大化投入产出比。")],-1),l("p",null,[l("strong",null,"Ⅳ."),e(" 设计师在做设计规范时，"),l("code",null,"要不断与开发工程师沟通"),e("，保证设计规范的还原度。")],-1)])),_:1,__:[3]}),o[11]||(o[11]=l("h2",{id:"确定规范内容",tabindex:"-1"},[e("确定规范内容 "),l("a",{class:"header-anchor",href:"#确定规范内容","aria-label":"Permalink to “确定规范内容”"},"​")],-1)),o[12]||(o[12]=l("p",null,"UI 设计中，设计规范是一个关键步骤。知名大厂基本上都有一套自己的完整规范体系，在整理设计规范时，以大平台规范体系作为参考，针对产品自身情况增删，整理出我们自己所需要的规范内容，能有效地避免规范内容遗漏缺失。",-1)),a(d,{src:"ui/82.png"}),o[13]||(o[13]=l("h2",{id:"规范优先级",tabindex:"-1"},[e("规范优先级 "),l("a",{class:"header-anchor",href:"#规范优先级","aria-label":"Permalink to “规范优先级”"},"​")],-1)),o[14]||(o[14]=l("p",null,"了解规范的内容有哪些之后，我们需要确认的是规范优先级，规范内容庞大复杂，基础的、必要的、高性价比的放在第一个版本中，复杂的往后放，随着产品的迭代，规范才会越来越完整。",-1)),a(d,{src:"ui/97.png"})])}const T=s(p,[["render",h]]);export{P as __pageData,T as default};
