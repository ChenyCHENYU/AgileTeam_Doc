import{_ as n,I as s,c as b,o as p,af as i,J as e,j as o,w as t,a as l}from"./chunks/framework.hRqtpD5c.js";const f=JSON.parse('{"title":"OP：运维工程师(Operations Engineer)","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/document/manage/job-responsibility/op.md","filePath":"docs/document/manage/job-responsibility/op.md"}'),h={name:"docs/document/manage/job-responsibility/op.md"};function _(c,a,k,u,m,T){const r=s("FontColor"),d=s("ElCard");return p(),b("div",null,[a[32]||(a[32]=i("",7)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[0]||(a[0]=l(" 💡",-1)),a[1]||(a[1]=o("p",null,"通过实际业务进行服务器架构设计，一般会采用传统的多节点应用服务器配置，具体详细解释见输出备注。比如能详细描述服务器的数量、配置、网络拓扑、负载均衡策略等；包括服务器的安装、配置、测试、部署等步骤的详细文档；对设计方案进行风险评估，包括可能存在的问题、潜在的风险以及相应的应对措施；对设计方案进行性能和安全测试，确保满足项目的需求；为运维团队和其他相关人员提供培训材料，以确保他们能够理解并维护新的架构。",-1))]),_:1,__:[0,1]}),a[33]||(a[33]=i("",8)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[2]||(a[2]=l(" 💡",-1)),a[3]||(a[3]=o("p",null,"这个场景主要是负责确保项目的网络环境能满足业务需求，同时保障网络的安全性。所以除了需要了解项目中各个应用服务的访问需求，还要了解项目的安全要求，包括是否需要 VPN、防火墙等网络防御模块，以及这些模块的具体配置要求，了解现有的网络环境，包括网络拓扑结构、网络设备配置、网络带宽等信息等等。",-1))]),_:1,__:[2,3]}),a[34]||(a[34]=i("",7)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[4]||(a[4]=l(" 💡",-1)),a[5]||(a[5]=o("p",null,"比如应用系统采用 Centos7.4 系统，基于 docker-compose 编排的模式进行项目部署。通过 docker-compose 编排成功启动并运行，且各组件之间能够正常通信和协同工作；并且记录整个部署过程，包括执行的命令、遇到的问题及解决方法、各组件的最终配置参数等，方便后续维护和问题排查；同时对部署后的应用系统进行初步检查和测试，生成运行状态报告，说明系统是否正常运行、各项性能指标是否符合预期等。",-1))]),_:1,__:[4,5]}),a[35]||(a[35]=i("",7)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[6]||(a[6]=l(" 💡",-1)),a[7]||(a[7]=o("p",null,"需要运维伙伴在代码管理平台做相关配置，比如代码推送 ssh 链接配置、Dockerfile 构建脚本的配置，jenkins 脚本的配置等。",-1))]),_:1,__:[6,7]}),a[36]||(a[36]=i("",7)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[8]||(a[8]=l(" 💡",-1)),a[9]||(a[9]=o("p",null,"OP 在这个环节，需确保所选环境符合项目的技术和性能要求。比如环境准备，代码编译和构建，配置数据库，文件资源及应用程序部署等。",-1))]),_:1,__:[8,9]}),a[37]||(a[37]=i("",8)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[10]||(a[10]=l(" 💡",-1)),a[11]||(a[11]=o("p",null,"那么针对于不同场景下的日志管理诉求，都要围绕它的架构，需要 Elasticsearch 部署、Kibana 部署、Logstash 部署、后端项目代码修改等动作来达成这个目的。",-1))]),_:1,__:[10,11]}),a[38]||(a[38]=i("",8)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[12]||(a[12]=l(" 💡",-1)),a[13]||(a[13]=o("p",null,"那么就需要通过比如安装 Zabbix 及配置相关工具包，创建数据库授权、导入初始架构和数据等，通过 zabbix 监控平台配置相关的一些告警设置来实现有效的监控管理。",-1))]),_:1,__:[12,13]}),a[39]||(a[39]=i("",9)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[14]||(a[14]=l(" 💡",-1)),a[15]||(a[15]=o("p",null,"其实针对上面的场景，导致各协同平台的使用和管理比较混乱，项目管理的禅道、文档管理的语雀、代码管理的工蜂、接口管理的 apifox、原型设计管理的蓝湖等，乱七八糟不规范的管理和使用，其实隐性的给大家带来很多心智负担和沟通成本、时间成本，导致后续的使用和维护性变得极差。",-1))]),_:1,__:[14,15]}),a[40]||(a[40]=i("",7)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[16]||(a[16]=l(" 💡",-1)),a[17]||(a[17]=o("p",null,"所以，我们的运维伙伴，如果对项目过程中的一系列文档，产出，没有一个清晰的认知和解读甚至把控，我觉得就是灾难，运维就是个没有体面边角料工，我不想让大家如此定义我的运维伙伴。为了避免这种问题，那运维就要职业化的，严肃的规避运维风险，提高对运维工作承接的要求，最起码应该有的输入输出没有，达不到运维的要求，打驳回去，并应该在这个过程中，提前准备，走查，梳理项目运维承接问题清单，少一项划一项，从而推动和规范研发测到运维侧的工作交割流程。",-1))]),_:1,__:[16,17]}),a[41]||(a[41]=i("",7)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[18]||(a[18]=l(" 💡",-1)),a[19]||(a[19]=o("p",null,"运维跟踪，跟踪上线情况，为后续的验收后运维承接做准备，规避不能平滑承接风险，一方面来自研发侧，一方面来自客户测，关注项目开发，测试人员跟踪处理情况，典型事件和问题进行记录组织讨论。",-1))]),_:1,__:[18,19]}),a[42]||(a[42]=i("",7)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[20]||(a[20]=l(" 💡",-1)),a[21]||(a[21]=o("p",null,"这样的机制如果健康的执行下去，给团队带来的赋能和收益是不可估量的，运维的保障职能才更加立体，赋予运维团队的将是责任，激励，也能使团队更加凝聚，使协作更加的健壮，不然，哪个环节掉链子，哪个环节就进入运维侧来补台和拉扯。",-1))]),_:1,__:[20,21]}),a[43]||(a[43]=i("",7)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[22]||(a[22]=l(" 💡",-1)),a[23]||(a[23]=o("p",null,"这个场景比较特殊，需要我们的运维负责人进行有效甄别，以及对运维伙伴人员能力的判定，按照协同配合流程，具体到人，截至时间解决问题和规避该类问题。这一块也跟后续关于运维负责人的一些要求息息相关，迥异于其他专业组，本年不做 Leader 的指标要求，但需做指标准备。",-1))]),_:1,__:[22,23]}),a[44]||(a[44]=i("",10)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[24]||(a[24]=l(" 💡",-1)),a[25]||(a[25]=o("p",null,"那么作为组长，你要做人才识别，做一下小组的人盘盘点，你要有盘点的思路和章程，你对专业小组管理的理解，对同属性伙伴专业输出的识别，有一套方法论，基于这个方法论，针对动态的业务场景和公司战略需要，有人才分类匹配的依据，并且针对态度能力的融合，可以针对性的输出管理办法和考核标准，让大家知道需要把做的事儿，如何职业化的去做到什么程度，并把它的价值和能效体现起来，激活人才，凝聚一体，如臂指使。",-1))]),_:1,__:[24,25]}),a[45]||(a[45]=i("",8)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[26]||(a[26]=l(" 💡",-1)),a[27]||(a[27]=o("p",null,"那么简单直白一点说，一线的管理动作是需要一些行为执行来拉通分工协同的，动作就是其中一个最直观的抓手；比如小组内部分享，识别擅长和偏好，优缺点，引导性和针对性的使成员共同成长；小组双周会，调动小组的集体力量和智慧解决点点滴聚焦的问题，以面破点，落地解决问题，体现赋能，也为后续的工作计划和人员调配有一个前置清晰的依据。",-1))]),_:1,__:[26,27]}),a[46]||(a[46]=i("",9)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[28]||(a[28]=l(" 💡",-1)),a[29]||(a[29]=o("p",null,"要做到人员的有效调动，第一，对成员能力和项目匹配度有认知和判定；第二，能识别项目计划制定专业计划，避免人员空闲稀释成本和能效；第三，把控项目上专业人员的风险，有补台补位及预防措施，并确定末尾红线替换淘汰机制（比如任务完成度和输出要做到什么程度）若因为组人员调配，影响到项目组工作计划造成时间冲突的，需跟项目负责人和项目计划达成一致（计划识别和同步），有分歧上报部门调整优先级（尽量避免）。",-1))]),_:1,__:[28,29]}),a[47]||(a[47]=i("",7)),e(d,{shadow:"hover"},{default:t(()=>[e(r,{text:"解释"}),a[30]||(a[30]=l(" 💡",-1)),a[31]||(a[31]=o("p",null,"回归职场，职业发展的路径，公司团队发展的需要，内建都是核心，练武不练功，到头一场空，培养和晋升是相辅相成的，通俗直白一点说，你要晋升，就培养出来一个人来可以替代你现有，要把价值显性化，实例化，具象化，这才是管理的价值，赋能使能。",-1))]),_:1,__:[30,31]}),a[48]||(a[48]=o("p",null,"小组成员能力培养，要定指标，定要求，有培养计划和课题，结果可验证，如业务域，演讲能力，方案能力，需求管理能力等等，用输出沉淀和结果说话（也会作为晋升依据）；专业管理人员，需跟成员明确梯队匹配分级，未来我们配合人力资源把人员职级细化，明确晋升路径。",-1)),a[49]||(a[49]=o("h2",{id:"core",tabindex:"-1"},[l("Core "),o("a",{class:"header-anchor",href:"#core","aria-label":"Permalink to “Core”"},"​")],-1)),a[50]||(a[50]=o("div",{class:"tip custom-block"},[o("p",{class:"custom-block-title custom-block-title-default"},"TIP"),o("p",null,"对于一个合格且优秀的组长，一定要是制度流程的坚定拥护者和执行者，上传下达，上行下效，尽力尽心尽责的做好职能管理，树立好的标杆典型，杜绝劣币淘汰良币的情况发生，所以在这个过程中，就要做好检查，有效监督，积极纠偏，努力去做提升。把事、人、情分开来看。我们的组长，不但要对项目的输入输出有哪些洞若观火，还应该对输入输出到什么程度了如指掌，再好的制度、流程、规范，没有检查监督，纠偏和优化，最后就会不了了之流于形式。管理角色需要提升自己的认知，打败自己心理的矫情和软弱，规避本位主义的趋利避害，才是迈向管理角色坚实的一步，应该用更健康的心态去看待和开展管理工作，最终的目的，都是为了精益赋能，降低沟通和试错成本，而不是为管理而管理。")],-1))])}const x=n(h,[["render",_]]);export{f as __pageData,x as default};
